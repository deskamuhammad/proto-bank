// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: proto/log_http.proto

package httplogpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// =================
// Metadata
// =================
type HttpMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage int32 `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	Total   int32 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *HttpMeta) Reset() {
	*x = HttpMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_log_http_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpMeta) ProtoMessage() {}

func (x *HttpMeta) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_http_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpMeta.ProtoReflect.Descriptor instead.
func (*HttpMeta) Descriptor() ([]byte, []int) {
	return file_proto_log_http_proto_rawDescGZIP(), []int{0}
}

func (x *HttpMeta) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *HttpMeta) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *HttpMeta) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

// =================
// Parameter Request
// =================
type HttpLogParameterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int32  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PerPage     int32  `protobuf:"varint,2,opt,name=per_page,json=perPage,proto3" json:"per_page,omitempty"`
	OrderBy     string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	OrderMethod string `protobuf:"bytes,4,opt,name=order_method,json=orderMethod,proto3" json:"order_method,omitempty"`
	DateStart   string `protobuf:"bytes,5,opt,name=date_start,json=dateStart,proto3" json:"date_start,omitempty"`
	DateEnd     string `protobuf:"bytes,6,opt,name=date_end,json=dateEnd,proto3" json:"date_end,omitempty"`
}

func (x *HttpLogParameterRequest) Reset() {
	*x = HttpLogParameterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_log_http_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpLogParameterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpLogParameterRequest) ProtoMessage() {}

func (x *HttpLogParameterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_http_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpLogParameterRequest.ProtoReflect.Descriptor instead.
func (*HttpLogParameterRequest) Descriptor() ([]byte, []int) {
	return file_proto_log_http_proto_rawDescGZIP(), []int{1}
}

func (x *HttpLogParameterRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *HttpLogParameterRequest) GetPerPage() int32 {
	if x != nil {
		return x.PerPage
	}
	return 0
}

func (x *HttpLogParameterRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *HttpLogParameterRequest) GetOrderMethod() string {
	if x != nil {
		return x.OrderMethod
	}
	return ""
}

func (x *HttpLogParameterRequest) GetDateStart() string {
	if x != nil {
		return x.DateStart
	}
	return ""
}

func (x *HttpLogParameterRequest) GetDateEnd() string {
	if x != nil {
		return x.DateEnd
	}
	return ""
}

type HttpLogDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReferenceNo string `protobuf:"bytes,2,opt,name=reference_no,json=referenceNo,proto3" json:"reference_no,omitempty"`
	LogType     string `protobuf:"bytes,3,opt,name=log_type,json=logType,proto3" json:"log_type,omitempty"`
	Url         string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	StatusCode  int32  `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	DateLog     string `protobuf:"bytes,6,opt,name=date_log,json=dateLog,proto3" json:"date_log,omitempty"`
	Request     string `protobuf:"bytes,7,opt,name=request,proto3" json:"request,omitempty"`
	Response    string `protobuf:"bytes,8,opt,name=response,proto3" json:"response,omitempty"`
	Headers     string `protobuf:"bytes,9,opt,name=headers,proto3" json:"headers,omitempty"`
	CreatedAt   string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   string `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *HttpLogDataResponse) Reset() {
	*x = HttpLogDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_log_http_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpLogDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpLogDataResponse) ProtoMessage() {}

func (x *HttpLogDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_http_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpLogDataResponse.ProtoReflect.Descriptor instead.
func (*HttpLogDataResponse) Descriptor() ([]byte, []int) {
	return file_proto_log_http_proto_rawDescGZIP(), []int{2}
}

func (x *HttpLogDataResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HttpLogDataResponse) GetReferenceNo() string {
	if x != nil {
		return x.ReferenceNo
	}
	return ""
}

func (x *HttpLogDataResponse) GetLogType() string {
	if x != nil {
		return x.LogType
	}
	return ""
}

func (x *HttpLogDataResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpLogDataResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HttpLogDataResponse) GetDateLog() string {
	if x != nil {
		return x.DateLog
	}
	return ""
}

func (x *HttpLogDataResponse) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *HttpLogDataResponse) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *HttpLogDataResponse) GetHeaders() string {
	if x != nil {
		return x.Headers
	}
	return ""
}

func (x *HttpLogDataResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *HttpLogDataResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type HttpLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    *HttpLogDataResponse `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Meta    *HttpMeta            `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *HttpLogResponse) Reset() {
	*x = HttpLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_log_http_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpLogResponse) ProtoMessage() {}

func (x *HttpLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_http_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpLogResponse.ProtoReflect.Descriptor instead.
func (*HttpLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_log_http_proto_rawDescGZIP(), []int{3}
}

func (x *HttpLogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HttpLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HttpLogResponse) GetData() *HttpLogDataResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HttpLogResponse) GetMeta() *HttpMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type ListHttpLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data    []*HttpLogDataResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Meta    *HttpMeta              `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *ListHttpLogResponse) Reset() {
	*x = ListHttpLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_log_http_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListHttpLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHttpLogResponse) ProtoMessage() {}

func (x *ListHttpLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_http_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHttpLogResponse.ProtoReflect.Descriptor instead.
func (*ListHttpLogResponse) Descriptor() ([]byte, []int) {
	return file_proto_log_http_proto_rawDescGZIP(), []int{4}
}

func (x *ListHttpLogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListHttpLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListHttpLogResponse) GetData() []*HttpLogDataResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ListHttpLogResponse) GetMeta() *HttpMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

type CreateHttpLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceNo string `protobuf:"bytes,1,opt,name=reference_no,json=referenceNo,proto3" json:"reference_no,omitempty"`
	LogType     string `protobuf:"bytes,2,opt,name=log_type,json=logType,proto3" json:"log_type,omitempty"`
	Url         string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	StatusCode  int32  `protobuf:"varint,4,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	DateLog     string `protobuf:"bytes,5,opt,name=date_log,json=dateLog,proto3" json:"date_log,omitempty"`
	Request     string `protobuf:"bytes,6,opt,name=request,proto3" json:"request,omitempty"`
	Response    string `protobuf:"bytes,7,opt,name=response,proto3" json:"response,omitempty"`
	Headers     string `protobuf:"bytes,8,opt,name=headers,proto3" json:"headers,omitempty"`
}

func (x *CreateHttpLogRequest) Reset() {
	*x = CreateHttpLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_log_http_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHttpLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHttpLogRequest) ProtoMessage() {}

func (x *CreateHttpLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_http_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHttpLogRequest.ProtoReflect.Descriptor instead.
func (*CreateHttpLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_log_http_proto_rawDescGZIP(), []int{5}
}

func (x *CreateHttpLogRequest) GetReferenceNo() string {
	if x != nil {
		return x.ReferenceNo
	}
	return ""
}

func (x *CreateHttpLogRequest) GetLogType() string {
	if x != nil {
		return x.LogType
	}
	return ""
}

func (x *CreateHttpLogRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CreateHttpLogRequest) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CreateHttpLogRequest) GetDateLog() string {
	if x != nil {
		return x.DateLog
	}
	return ""
}

func (x *CreateHttpLogRequest) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *CreateHttpLogRequest) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *CreateHttpLogRequest) GetHeaders() string {
	if x != nil {
		return x.Headers
	}
	return ""
}

type UpdateHttpLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReferenceNo string `protobuf:"bytes,2,opt,name=reference_no,json=referenceNo,proto3" json:"reference_no,omitempty"`
	LogType     string `protobuf:"bytes,3,opt,name=log_type,json=logType,proto3" json:"log_type,omitempty"`
	Url         string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	StatusCode  int32  `protobuf:"varint,5,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	DateLog     string `protobuf:"bytes,6,opt,name=date_log,json=dateLog,proto3" json:"date_log,omitempty"`
	Request     string `protobuf:"bytes,7,opt,name=request,proto3" json:"request,omitempty"`
	Response    string `protobuf:"bytes,8,opt,name=response,proto3" json:"response,omitempty"`
	Headers     string `protobuf:"bytes,9,opt,name=headers,proto3" json:"headers,omitempty"`
	UpdatedAt   string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UpdateHttpLogRequest) Reset() {
	*x = UpdateHttpLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_log_http_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHttpLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHttpLogRequest) ProtoMessage() {}

func (x *UpdateHttpLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_http_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHttpLogRequest.ProtoReflect.Descriptor instead.
func (*UpdateHttpLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_log_http_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateHttpLogRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateHttpLogRequest) GetReferenceNo() string {
	if x != nil {
		return x.ReferenceNo
	}
	return ""
}

func (x *UpdateHttpLogRequest) GetLogType() string {
	if x != nil {
		return x.LogType
	}
	return ""
}

func (x *UpdateHttpLogRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UpdateHttpLogRequest) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UpdateHttpLogRequest) GetDateLog() string {
	if x != nil {
		return x.DateLog
	}
	return ""
}

func (x *UpdateHttpLogRequest) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *UpdateHttpLogRequest) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *UpdateHttpLogRequest) GetHeaders() string {
	if x != nil {
		return x.Headers
	}
	return ""
}

func (x *UpdateHttpLogRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type FindHttpLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindHttpLogRequest) Reset() {
	*x = FindHttpLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_log_http_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindHttpLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindHttpLogRequest) ProtoMessage() {}

func (x *FindHttpLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_log_http_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindHttpLogRequest.ProtoReflect.Descriptor instead.
func (*FindHttpLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_log_http_proto_rawDescGZIP(), []int{7}
}

func (x *FindHttpLogRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_proto_log_http_proto protoreflect.FileDescriptor

var file_proto_log_http_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x6f, 0x67, 0x5f, 0x68, 0x74, 0x74, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x68, 0x74, 0x74, 0x70, 0x6c, 0x6f, 0x67, 0x70,
	0x62, 0x22, 0x4f, 0x0a, 0x08, 0x48, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xc0, 0x01, 0x0a, 0x17, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x6e, 0x64, 0x22, 0xbf, 0x02, 0x0a, 0x13, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x0f, 0x48, 0x74, 0x74, 0x70,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x6c, 0x6f,
	0x67, 0x70, 0x62, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x74,
	0x74, 0x70, 0x6c, 0x6f, 0x67, 0x70, 0x62, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xa0, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x48,
	0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x74, 0x74,
	0x70, 0x6c, 0x6f, 0x67, 0x70, 0x62, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x27, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x68, 0x74, 0x74, 0x70, 0x6c, 0x6f, 0x67, 0x70, 0x62, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4d,
	0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xf2, 0x01, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0xa1,
	0x02, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f,
	0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x64, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x32, 0x91, 0x02, 0x0a, 0x0e, 0x48, 0x74, 0x74,
	0x70, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f,
	0x67, 0x12, 0x1f, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x6c, 0x6f, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x6c, 0x6f, 0x67, 0x70, 0x62, 0x2e, 0x48,
	0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x59,
	0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x74,
	0x74, 0x70, 0x4c, 0x6f, 0x67, 0x12, 0x22, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x6c, 0x6f, 0x67, 0x70,
	0x62, 0x2e, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x68, 0x74, 0x74, 0x70,
	0x6c, 0x6f, 0x67, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x46, 0x69, 0x6e, 0x64, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x42, 0x79, 0x49,
	0x64, 0x12, 0x1d, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x6c, 0x6f, 0x67, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x48, 0x74, 0x74, 0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x6c, 0x6f, 0x67, 0x70, 0x62, 0x2e, 0x48, 0x74, 0x74,
	0x70, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x15, 0x5a, 0x13,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x6c, 0x6f,
	0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_log_http_proto_rawDescOnce sync.Once
	file_proto_log_http_proto_rawDescData = file_proto_log_http_proto_rawDesc
)

func file_proto_log_http_proto_rawDescGZIP() []byte {
	file_proto_log_http_proto_rawDescOnce.Do(func() {
		file_proto_log_http_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_log_http_proto_rawDescData)
	})
	return file_proto_log_http_proto_rawDescData
}

var file_proto_log_http_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_log_http_proto_goTypes = []interface{}{
	(*HttpMeta)(nil),                // 0: httplogpb.HttpMeta
	(*HttpLogParameterRequest)(nil), // 1: httplogpb.HttpLogParameterRequest
	(*HttpLogDataResponse)(nil),     // 2: httplogpb.HttpLogDataResponse
	(*HttpLogResponse)(nil),         // 3: httplogpb.HttpLogResponse
	(*ListHttpLogResponse)(nil),     // 4: httplogpb.ListHttpLogResponse
	(*CreateHttpLogRequest)(nil),    // 5: httplogpb.CreateHttpLogRequest
	(*UpdateHttpLogRequest)(nil),    // 6: httplogpb.UpdateHttpLogRequest
	(*FindHttpLogRequest)(nil),      // 7: httplogpb.FindHttpLogRequest
}
var file_proto_log_http_proto_depIdxs = []int32{
	2, // 0: httplogpb.HttpLogResponse.data:type_name -> httplogpb.HttpLogDataResponse
	0, // 1: httplogpb.HttpLogResponse.meta:type_name -> httplogpb.HttpMeta
	2, // 2: httplogpb.ListHttpLogResponse.data:type_name -> httplogpb.HttpLogDataResponse
	0, // 3: httplogpb.ListHttpLogResponse.meta:type_name -> httplogpb.HttpMeta
	5, // 4: httplogpb.HttpLogService.ServeInsertHttpLog:input_type -> httplogpb.CreateHttpLogRequest
	1, // 5: httplogpb.HttpLogService.ServeGetListHttpLog:input_type -> httplogpb.HttpLogParameterRequest
	7, // 6: httplogpb.HttpLogService.ServeFindHttpLogById:input_type -> httplogpb.FindHttpLogRequest
	3, // 7: httplogpb.HttpLogService.ServeInsertHttpLog:output_type -> httplogpb.HttpLogResponse
	4, // 8: httplogpb.HttpLogService.ServeGetListHttpLog:output_type -> httplogpb.ListHttpLogResponse
	3, // 9: httplogpb.HttpLogService.ServeFindHttpLogById:output_type -> httplogpb.HttpLogResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_proto_log_http_proto_init() }
func file_proto_log_http_proto_init() {
	if File_proto_log_http_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_log_http_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_log_http_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpLogParameterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_log_http_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpLogDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_log_http_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_log_http_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListHttpLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_log_http_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHttpLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_log_http_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHttpLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_log_http_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindHttpLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_log_http_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_log_http_proto_goTypes,
		DependencyIndexes: file_proto_log_http_proto_depIdxs,
		MessageInfos:      file_proto_log_http_proto_msgTypes,
	}.Build()
	File_proto_log_http_proto = out.File
	file_proto_log_http_proto_rawDesc = nil
	file_proto_log_http_proto_goTypes = nil
	file_proto_log_http_proto_depIdxs = nil
}
