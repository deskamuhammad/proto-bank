// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: api/sales/proto/transaction.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ===========================
// Enums
// ===========================
type SourceEnum int32

const (
	SourceEnum_SOURCE_UNSPECIFIED SourceEnum = 0
	SourceEnum_SOURCE_INTERNAL    SourceEnum = 1
	SourceEnum_SOURCE_EXTERNAL    SourceEnum = 2
)

// Enum value maps for SourceEnum.
var (
	SourceEnum_name = map[int32]string{
		0: "SOURCE_UNSPECIFIED",
		1: "SOURCE_INTERNAL",
		2: "SOURCE_EXTERNAL",
	}
	SourceEnum_value = map[string]int32{
		"SOURCE_UNSPECIFIED": 0,
		"SOURCE_INTERNAL":    1,
		"SOURCE_EXTERNAL":    2,
	}
)

func (x SourceEnum) Enum() *SourceEnum {
	p := new(SourceEnum)
	*p = x
	return p
}

func (x SourceEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SourceEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sales_proto_transaction_proto_enumTypes[0].Descriptor()
}

func (SourceEnum) Type() protoreflect.EnumType {
	return &file_api_sales_proto_transaction_proto_enumTypes[0]
}

func (x SourceEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SourceEnum.Descriptor instead.
func (SourceEnum) EnumDescriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{0}
}

type TransactionTypeEnum int32

const (
	TransactionTypeEnum_TRANSACTION_TYPE_UNSPECIFIED TransactionTypeEnum = 0
	TransactionTypeEnum_TRANSACTION_TYPE_TOPUP       TransactionTypeEnum = 1
	TransactionTypeEnum_TRANSACTION_TYPE_TRANSFER    TransactionTypeEnum = 2
)

// Enum value maps for TransactionTypeEnum.
var (
	TransactionTypeEnum_name = map[int32]string{
		0: "TRANSACTION_TYPE_UNSPECIFIED",
		1: "TRANSACTION_TYPE_TOPUP",
		2: "TRANSACTION_TYPE_TRANSFER",
	}
	TransactionTypeEnum_value = map[string]int32{
		"TRANSACTION_TYPE_UNSPECIFIED": 0,
		"TRANSACTION_TYPE_TOPUP":       1,
		"TRANSACTION_TYPE_TRANSFER":    2,
	}
)

func (x TransactionTypeEnum) Enum() *TransactionTypeEnum {
	p := new(TransactionTypeEnum)
	*p = x
	return p
}

func (x TransactionTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sales_proto_transaction_proto_enumTypes[1].Descriptor()
}

func (TransactionTypeEnum) Type() protoreflect.EnumType {
	return &file_api_sales_proto_transaction_proto_enumTypes[1]
}

func (x TransactionTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionTypeEnum.Descriptor instead.
func (TransactionTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{1}
}

type PaymentTypeEnum int32

const (
	PaymentTypeEnum_PAYMENT_TYPE_UNSPECIFIED PaymentTypeEnum = 0
	PaymentTypeEnum_PAYMENT_TYPE_PREPAID     PaymentTypeEnum = 1
	PaymentTypeEnum_PAYMENT_TYPE_POSTPAID    PaymentTypeEnum = 2
)

// Enum value maps for PaymentTypeEnum.
var (
	PaymentTypeEnum_name = map[int32]string{
		0: "PAYMENT_TYPE_UNSPECIFIED",
		1: "PAYMENT_TYPE_PREPAID",
		2: "PAYMENT_TYPE_POSTPAID",
	}
	PaymentTypeEnum_value = map[string]int32{
		"PAYMENT_TYPE_UNSPECIFIED": 0,
		"PAYMENT_TYPE_PREPAID":     1,
		"PAYMENT_TYPE_POSTPAID":    2,
	}
)

func (x PaymentTypeEnum) Enum() *PaymentTypeEnum {
	p := new(PaymentTypeEnum)
	*p = x
	return p
}

func (x PaymentTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PaymentTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sales_proto_transaction_proto_enumTypes[2].Descriptor()
}

func (PaymentTypeEnum) Type() protoreflect.EnumType {
	return &file_api_sales_proto_transaction_proto_enumTypes[2]
}

func (x PaymentTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PaymentTypeEnum.Descriptor instead.
func (PaymentTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{2}
}

type StatusEnum int32

const (
	StatusEnum_STATUS_UNSPECIFIED          StatusEnum = 0
	StatusEnum_STATUS_WAITING_APPROVAL     StatusEnum = 1
	StatusEnum_STATUS_SUCCESS              StatusEnum = 2
	StatusEnum_STATUS_REJECT_REQUEST       StatusEnum = 3
	StatusEnum_STATUS_PENDING              StatusEnum = 4
	StatusEnum_STATUS_EXPIRED              StatusEnum = 5
	StatusEnum_STATUS_WAITING_INVOICE      StatusEnum = 6
	StatusEnum_STATUS_WAITING_SIGNER       StatusEnum = 7
	StatusEnum_STATUS_PROCESSING_DOCUMENT  StatusEnum = 8
	StatusEnum_STATUS_UNPAID               StatusEnum = 9
	StatusEnum_STATUS_INVOICE_OVERDUE      StatusEnum = 10
	StatusEnum_STATUS_WAITING_VERIFICATION StatusEnum = 11
	StatusEnum_STATUS_PAID                 StatusEnum = 12
	StatusEnum_STATUS_REJECT_PAYMENT       StatusEnum = 13
)

// Enum value maps for StatusEnum.
var (
	StatusEnum_name = map[int32]string{
		0:  "STATUS_UNSPECIFIED",
		1:  "STATUS_WAITING_APPROVAL",
		2:  "STATUS_SUCCESS",
		3:  "STATUS_REJECT_REQUEST",
		4:  "STATUS_PENDING",
		5:  "STATUS_EXPIRED",
		6:  "STATUS_WAITING_INVOICE",
		7:  "STATUS_WAITING_SIGNER",
		8:  "STATUS_PROCESSING_DOCUMENT",
		9:  "STATUS_UNPAID",
		10: "STATUS_INVOICE_OVERDUE",
		11: "STATUS_WAITING_VERIFICATION",
		12: "STATUS_PAID",
		13: "STATUS_REJECT_PAYMENT",
	}
	StatusEnum_value = map[string]int32{
		"STATUS_UNSPECIFIED":          0,
		"STATUS_WAITING_APPROVAL":     1,
		"STATUS_SUCCESS":              2,
		"STATUS_REJECT_REQUEST":       3,
		"STATUS_PENDING":              4,
		"STATUS_EXPIRED":              5,
		"STATUS_WAITING_INVOICE":      6,
		"STATUS_WAITING_SIGNER":       7,
		"STATUS_PROCESSING_DOCUMENT":  8,
		"STATUS_UNPAID":               9,
		"STATUS_INVOICE_OVERDUE":      10,
		"STATUS_WAITING_VERIFICATION": 11,
		"STATUS_PAID":                 12,
		"STATUS_REJECT_PAYMENT":       13,
	}
)

func (x StatusEnum) Enum() *StatusEnum {
	p := new(StatusEnum)
	*p = x
	return p
}

func (x StatusEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sales_proto_transaction_proto_enumTypes[3].Descriptor()
}

func (StatusEnum) Type() protoreflect.EnumType {
	return &file_api_sales_proto_transaction_proto_enumTypes[3]
}

func (x StatusEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusEnum.Descriptor instead.
func (StatusEnum) EnumDescriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{3}
}

type BalanceTypeEnum int32

const (
	BalanceTypeEnum_BALANCE_TYPE_UNSPECIFIED      BalanceTypeEnum = 0
	BalanceTypeEnum_BALANCE_TYPE_ESIGN            BalanceTypeEnum = 1
	BalanceTypeEnum_BALANCE_TYPE_OTP              BalanceTypeEnum = 2
	BalanceTypeEnum_BALANCE_TYPE_EMATERAI         BalanceTypeEnum = 3
	BalanceTypeEnum_BALANCE_TYPE_REGISTRATION     BalanceTypeEnum = 4
	BalanceTypeEnum_BALANCE_TYPE_EMPLOYEE_ACCOUNT BalanceTypeEnum = 5
	BalanceTypeEnum_BALANCE_TYPE_BLAST            BalanceTypeEnum = 6
	BalanceTypeEnum_BALANCE_TYPE_OCR              BalanceTypeEnum = 7
	BalanceTypeEnum_BALANCE_TYPE_FACE_RECOGNITION BalanceTypeEnum = 8
	BalanceTypeEnum_BALANCE_TYPE_DEMOGRAPHY       BalanceTypeEnum = 9
	BalanceTypeEnum_BALANCE_TYPE_ID_VERIFICATION  BalanceTypeEnum = 10
	BalanceTypeEnum_BALANCE_TYPE_ESEAL            BalanceTypeEnum = 11
	BalanceTypeEnum_BALANCE_TYPE_LIVENESS         BalanceTypeEnum = 12
)

// Enum value maps for BalanceTypeEnum.
var (
	BalanceTypeEnum_name = map[int32]string{
		0:  "BALANCE_TYPE_UNSPECIFIED",
		1:  "BALANCE_TYPE_ESIGN",
		2:  "BALANCE_TYPE_OTP",
		3:  "BALANCE_TYPE_EMATERAI",
		4:  "BALANCE_TYPE_REGISTRATION",
		5:  "BALANCE_TYPE_EMPLOYEE_ACCOUNT",
		6:  "BALANCE_TYPE_BLAST",
		7:  "BALANCE_TYPE_OCR",
		8:  "BALANCE_TYPE_FACE_RECOGNITION",
		9:  "BALANCE_TYPE_DEMOGRAPHY",
		10: "BALANCE_TYPE_ID_VERIFICATION",
		11: "BALANCE_TYPE_ESEAL",
		12: "BALANCE_TYPE_LIVENESS",
	}
	BalanceTypeEnum_value = map[string]int32{
		"BALANCE_TYPE_UNSPECIFIED":      0,
		"BALANCE_TYPE_ESIGN":            1,
		"BALANCE_TYPE_OTP":              2,
		"BALANCE_TYPE_EMATERAI":         3,
		"BALANCE_TYPE_REGISTRATION":     4,
		"BALANCE_TYPE_EMPLOYEE_ACCOUNT": 5,
		"BALANCE_TYPE_BLAST":            6,
		"BALANCE_TYPE_OCR":              7,
		"BALANCE_TYPE_FACE_RECOGNITION": 8,
		"BALANCE_TYPE_DEMOGRAPHY":       9,
		"BALANCE_TYPE_ID_VERIFICATION":  10,
		"BALANCE_TYPE_ESEAL":            11,
		"BALANCE_TYPE_LIVENESS":         12,
	}
)

func (x BalanceTypeEnum) Enum() *BalanceTypeEnum {
	p := new(BalanceTypeEnum)
	*p = x
	return p
}

func (x BalanceTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BalanceTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sales_proto_transaction_proto_enumTypes[4].Descriptor()
}

func (BalanceTypeEnum) Type() protoreflect.EnumType {
	return &file_api_sales_proto_transaction_proto_enumTypes[4]
}

func (x BalanceTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BalanceTypeEnum.Descriptor instead.
func (BalanceTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{4}
}

// ===========================
// Entities
// ===========================
type TransactionEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelCode     string              `protobuf:"bytes,2,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	Status          StatusEnum          `protobuf:"varint,3,opt,name=status,proto3,enum=invoice.StatusEnum" json:"status,omitempty"`
	TransferFrom    string              `protobuf:"bytes,4,opt,name=transfer_from,json=transferFrom,proto3" json:"transfer_from,omitempty"`
	TransferTo      string              `protobuf:"bytes,5,opt,name=transfer_to,json=transferTo,proto3" json:"transfer_to,omitempty"`
	CreatedBy       string              `protobuf:"bytes,6,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	TransactionType TransactionTypeEnum `protobuf:"varint,7,opt,name=transaction_type,json=transactionType,proto3,enum=invoice.TransactionTypeEnum" json:"transaction_type,omitempty"`
	Origin          string              `protobuf:"bytes,8,opt,name=origin,proto3" json:"origin,omitempty"`
	Destination     string              `protobuf:"bytes,9,opt,name=destination,proto3" json:"destination,omitempty"`
	Source          SourceEnum          `protobuf:"varint,10,opt,name=source,proto3,enum=invoice.SourceEnum" json:"source,omitempty"`
	CustomerId      string              `protobuf:"bytes,11,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	RequestNumber   string              `protobuf:"bytes,12,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	PaymentId       string              `protobuf:"bytes,13,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
	InvoiceNumber   string              `protobuf:"bytes,14,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	CreatedAt       string              `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string              `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt       string              `protobuf:"bytes,17,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *TransactionEntity) Reset() {
	*x = TransactionEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionEntity) ProtoMessage() {}

func (x *TransactionEntity) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionEntity.ProtoReflect.Descriptor instead.
func (*TransactionEntity) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionEntity) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *TransactionEntity) GetStatus() StatusEnum {
	if x != nil {
		return x.Status
	}
	return StatusEnum_STATUS_UNSPECIFIED
}

func (x *TransactionEntity) GetTransferFrom() string {
	if x != nil {
		return x.TransferFrom
	}
	return ""
}

func (x *TransactionEntity) GetTransferTo() string {
	if x != nil {
		return x.TransferTo
	}
	return ""
}

func (x *TransactionEntity) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *TransactionEntity) GetTransactionType() TransactionTypeEnum {
	if x != nil {
		return x.TransactionType
	}
	return TransactionTypeEnum_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *TransactionEntity) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *TransactionEntity) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *TransactionEntity) GetSource() SourceEnum {
	if x != nil {
		return x.Source
	}
	return SourceEnum_SOURCE_UNSPECIFIED
}

func (x *TransactionEntity) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *TransactionEntity) GetRequestNumber() string {
	if x != nil {
		return x.RequestNumber
	}
	return ""
}

func (x *TransactionEntity) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *TransactionEntity) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *TransactionEntity) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TransactionEntity) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *TransactionEntity) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type CustomerRequestEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestNumber         string `protobuf:"bytes,1,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	RequestedAt           string `protobuf:"bytes,2,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	RequestApprovedAt     string `protobuf:"bytes,3,opt,name=request_approved_at,json=requestApprovedAt,proto3" json:"request_approved_at,omitempty"`
	RequestRejectedAt     string `protobuf:"bytes,4,opt,name=request_rejected_at,json=requestRejectedAt,proto3" json:"request_rejected_at,omitempty"`
	RequestRejectReason   string `protobuf:"bytes,5,opt,name=request_reject_reason,json=requestRejectReason,proto3" json:"request_reject_reason,omitempty"`
	InvoiceRequestDueDate string `protobuf:"bytes,6,opt,name=invoice_request_due_date,json=invoiceRequestDueDate,proto3" json:"invoice_request_due_date,omitempty"`
	InvoiceRequestedAt    string `protobuf:"bytes,7,opt,name=invoice_requested_at,json=invoiceRequestedAt,proto3" json:"invoice_requested_at,omitempty"`
	CreatedAt             string `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             string `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt             string `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *CustomerRequestEntity) Reset() {
	*x = CustomerRequestEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerRequestEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerRequestEntity) ProtoMessage() {}

func (x *CustomerRequestEntity) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerRequestEntity.ProtoReflect.Descriptor instead.
func (*CustomerRequestEntity) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *CustomerRequestEntity) GetRequestNumber() string {
	if x != nil {
		return x.RequestNumber
	}
	return ""
}

func (x *CustomerRequestEntity) GetRequestedAt() string {
	if x != nil {
		return x.RequestedAt
	}
	return ""
}

func (x *CustomerRequestEntity) GetRequestApprovedAt() string {
	if x != nil {
		return x.RequestApprovedAt
	}
	return ""
}

func (x *CustomerRequestEntity) GetRequestRejectedAt() string {
	if x != nil {
		return x.RequestRejectedAt
	}
	return ""
}

func (x *CustomerRequestEntity) GetRequestRejectReason() string {
	if x != nil {
		return x.RequestRejectReason
	}
	return ""
}

func (x *CustomerRequestEntity) GetInvoiceRequestDueDate() string {
	if x != nil {
		return x.InvoiceRequestDueDate
	}
	return ""
}

func (x *CustomerRequestEntity) GetInvoiceRequestedAt() string {
	if x != nil {
		return x.InvoiceRequestedAt
	}
	return ""
}

func (x *CustomerRequestEntity) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CustomerRequestEntity) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CustomerRequestEntity) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type CustomerEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cc                   string `protobuf:"bytes,2,opt,name=cc,proto3" json:"cc,omitempty"`
	Bcc                  string `protobuf:"bytes,3,opt,name=bcc,proto3" json:"bcc,omitempty"`
	SendInvoiceTo        string `protobuf:"bytes,4,opt,name=send_invoice_to,json=sendInvoiceTo,proto3" json:"send_invoice_to,omitempty"`
	SendInvoiceRequestTo string `protobuf:"bytes,5,opt,name=send_invoice_request_to,json=sendInvoiceRequestTo,proto3" json:"send_invoice_request_to,omitempty"`
	RequesterName        string `protobuf:"bytes,6,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	CompanyName          string `protobuf:"bytes,7,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	ProjectName          string `protobuf:"bytes,8,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Pic                  string `protobuf:"bytes,9,opt,name=pic,proto3" json:"pic,omitempty"`
	BillToEmail          string `protobuf:"bytes,10,opt,name=bill_to_email,json=billToEmail,proto3" json:"bill_to_email,omitempty"`
	PhoneNumberPic       string `protobuf:"bytes,11,opt,name=phone_number_pic,json=phoneNumberPic,proto3" json:"phone_number_pic,omitempty"`
	LetterAddress        string `protobuf:"bytes,12,opt,name=letter_address,json=letterAddress,proto3" json:"letter_address,omitempty"`
	CreatedAt            string `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt            string `protobuf:"bytes,15,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *CustomerEntity) Reset() {
	*x = CustomerEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerEntity) ProtoMessage() {}

func (x *CustomerEntity) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerEntity.ProtoReflect.Descriptor instead.
func (*CustomerEntity) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *CustomerEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CustomerEntity) GetCc() string {
	if x != nil {
		return x.Cc
	}
	return ""
}

func (x *CustomerEntity) GetBcc() string {
	if x != nil {
		return x.Bcc
	}
	return ""
}

func (x *CustomerEntity) GetSendInvoiceTo() string {
	if x != nil {
		return x.SendInvoiceTo
	}
	return ""
}

func (x *CustomerEntity) GetSendInvoiceRequestTo() string {
	if x != nil {
		return x.SendInvoiceRequestTo
	}
	return ""
}

func (x *CustomerEntity) GetRequesterName() string {
	if x != nil {
		return x.RequesterName
	}
	return ""
}

func (x *CustomerEntity) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *CustomerEntity) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CustomerEntity) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *CustomerEntity) GetBillToEmail() string {
	if x != nil {
		return x.BillToEmail
	}
	return ""
}

func (x *CustomerEntity) GetPhoneNumberPic() string {
	if x != nil {
		return x.PhoneNumberPic
	}
	return ""
}

func (x *CustomerEntity) GetLetterAddress() string {
	if x != nil {
		return x.LetterAddress
	}
	return ""
}

func (x *CustomerEntity) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CustomerEntity) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *CustomerEntity) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type PaymentEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PaymentDueDate      string          `protobuf:"bytes,2,opt,name=payment_due_date,json=paymentDueDate,proto3" json:"payment_due_date,omitempty"`
	PaymentTerm         string          `protobuf:"bytes,3,opt,name=payment_term,json=paymentTerm,proto3" json:"payment_term,omitempty"`
	PaymentRejectedAt   string          `protobuf:"bytes,4,opt,name=payment_rejected_at,json=paymentRejectedAt,proto3" json:"payment_rejected_at,omitempty"`
	PaymentRejectReason string          `protobuf:"bytes,5,opt,name=payment_reject_reason,json=paymentRejectReason,proto3" json:"payment_reject_reason,omitempty"`
	PaymentType         PaymentTypeEnum `protobuf:"varint,6,opt,name=payment_type,json=paymentType,proto3,enum=invoice.PaymentTypeEnum" json:"payment_type,omitempty"`
	PaidAt              string          `protobuf:"bytes,7,opt,name=paid_at,json=paidAt,proto3" json:"paid_at,omitempty"`
	CreatedAt           string          `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           string          `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt           string          `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *PaymentEntity) Reset() {
	*x = PaymentEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentEntity) ProtoMessage() {}

func (x *PaymentEntity) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentEntity.ProtoReflect.Descriptor instead.
func (*PaymentEntity) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymentEntity) GetPaymentDueDate() string {
	if x != nil {
		return x.PaymentDueDate
	}
	return ""
}

func (x *PaymentEntity) GetPaymentTerm() string {
	if x != nil {
		return x.PaymentTerm
	}
	return ""
}

func (x *PaymentEntity) GetPaymentRejectedAt() string {
	if x != nil {
		return x.PaymentRejectedAt
	}
	return ""
}

func (x *PaymentEntity) GetPaymentRejectReason() string {
	if x != nil {
		return x.PaymentRejectReason
	}
	return ""
}

func (x *PaymentEntity) GetPaymentType() PaymentTypeEnum {
	if x != nil {
		return x.PaymentType
	}
	return PaymentTypeEnum_PAYMENT_TYPE_UNSPECIFIED
}

func (x *PaymentEntity) GetPaidAt() string {
	if x != nil {
		return x.PaidAt
	}
	return ""
}

func (x *PaymentEntity) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PaymentEntity) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *PaymentEntity) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type InvoiceEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InvoiceNumber         string `protobuf:"bytes,1,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	InvoiceDueDate        string `protobuf:"bytes,2,opt,name=invoice_due_date,json=invoiceDueDate,proto3" json:"invoice_due_date,omitempty"`
	InvoiceRequestDueDate string `protobuf:"bytes,3,opt,name=invoice_request_due_date,json=invoiceRequestDueDate,proto3" json:"invoice_request_due_date,omitempty"`
	InvoiceRequestedAt    string `protobuf:"bytes,4,opt,name=invoice_requested_at,json=invoiceRequestedAt,proto3" json:"invoice_requested_at,omitempty"`
	InvoiceShipment       string `protobuf:"bytes,5,opt,name=invoice_shipment,json=invoiceShipment,proto3" json:"invoice_shipment,omitempty"`
	IntegrationType       string `protobuf:"bytes,6,opt,name=integration_type,json=integrationType,proto3" json:"integration_type,omitempty"`
	CutOffDate            string `protobuf:"bytes,7,opt,name=cut_off_date,json=cutOffDate,proto3" json:"cut_off_date,omitempty"`
	WorkType              string `protobuf:"bytes,8,opt,name=work_type,json=workType,proto3" json:"work_type,omitempty"`
	Ppn                   int32  `protobuf:"varint,9,opt,name=ppn,proto3" json:"ppn,omitempty"`
	PpnReport             string `protobuf:"bytes,10,opt,name=ppn_report,json=ppnReport,proto3" json:"ppn_report,omitempty"`
	CreatedAt             string `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt             string `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt             string `protobuf:"bytes,13,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *InvoiceEntity) Reset() {
	*x = InvoiceEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvoiceEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvoiceEntity) ProtoMessage() {}

func (x *InvoiceEntity) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvoiceEntity.ProtoReflect.Descriptor instead.
func (*InvoiceEntity) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{4}
}

func (x *InvoiceEntity) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *InvoiceEntity) GetInvoiceDueDate() string {
	if x != nil {
		return x.InvoiceDueDate
	}
	return ""
}

func (x *InvoiceEntity) GetInvoiceRequestDueDate() string {
	if x != nil {
		return x.InvoiceRequestDueDate
	}
	return ""
}

func (x *InvoiceEntity) GetInvoiceRequestedAt() string {
	if x != nil {
		return x.InvoiceRequestedAt
	}
	return ""
}

func (x *InvoiceEntity) GetInvoiceShipment() string {
	if x != nil {
		return x.InvoiceShipment
	}
	return ""
}

func (x *InvoiceEntity) GetIntegrationType() string {
	if x != nil {
		return x.IntegrationType
	}
	return ""
}

func (x *InvoiceEntity) GetCutOffDate() string {
	if x != nil {
		return x.CutOffDate
	}
	return ""
}

func (x *InvoiceEntity) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *InvoiceEntity) GetPpn() int32 {
	if x != nil {
		return x.Ppn
	}
	return 0
}

func (x *InvoiceEntity) GetPpnReport() string {
	if x != nil {
		return x.PpnReport
	}
	return ""
}

func (x *InvoiceEntity) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *InvoiceEntity) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *InvoiceEntity) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

type TransactionDetailEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Price           int32  `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	Quantity        int32  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Discount        int32  `protobuf:"varint,4,opt,name=discount,proto3" json:"discount,omitempty"`
	Tax             int32  `protobuf:"varint,5,opt,name=tax,proto3" json:"tax,omitempty"`
	TotalAmount     int32  `protobuf:"varint,6,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	TransactionId   string `protobuf:"bytes,7,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	BalanceTypeCode string `protobuf:"bytes,8,opt,name=balance_type_code,json=balanceTypeCode,proto3" json:"balance_type_code,omitempty"`
	Description     string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	StartPeriod     string `protobuf:"bytes,10,opt,name=start_period,json=startPeriod,proto3" json:"start_period,omitempty"`
	EndPeriod       string `protobuf:"bytes,11,opt,name=end_period,json=endPeriod,proto3" json:"end_period,omitempty"`
	CreatedAt       string `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt       string `protobuf:"bytes,14,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
}

func (x *TransactionDetailEntity) Reset() {
	*x = TransactionDetailEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetailEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetailEntity) ProtoMessage() {}

func (x *TransactionDetailEntity) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetailEntity.ProtoReflect.Descriptor instead.
func (*TransactionDetailEntity) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{5}
}

func (x *TransactionDetailEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionDetailEntity) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TransactionDetailEntity) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *TransactionDetailEntity) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *TransactionDetailEntity) GetTax() int32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *TransactionDetailEntity) GetTotalAmount() int32 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *TransactionDetailEntity) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionDetailEntity) GetBalanceTypeCode() string {
	if x != nil {
		return x.BalanceTypeCode
	}
	return ""
}

func (x *TransactionDetailEntity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TransactionDetailEntity) GetStartPeriod() string {
	if x != nil {
		return x.StartPeriod
	}
	return ""
}

func (x *TransactionDetailEntity) GetEndPeriod() string {
	if x != nil {
		return x.EndPeriod
	}
	return ""
}

func (x *TransactionDetailEntity) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TransactionDetailEntity) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *TransactionDetailEntity) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

// ===========================
// Messages
// ===========================
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BalanceType BalanceTypeEnum `protobuf:"varint,1,opt,name=balance_type,json=balanceType,proto3,enum=invoice.BalanceTypeEnum" json:"balance_type,omitempty"`
	StartPeriod string          `protobuf:"bytes,2,opt,name=start_period,json=startPeriod,proto3" json:"start_period,omitempty"`
	EndPeriod   string          `protobuf:"bytes,3,opt,name=end_period,json=endPeriod,proto3" json:"end_period,omitempty"`
	Quantity    int32           `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price       int32           `protobuf:"varint,5,opt,name=price,proto3" json:"price,omitempty"`
	Discount    int32           `protobuf:"varint,6,opt,name=discount,proto3" json:"discount,omitempty"`
	TotalPrice  int32           `protobuf:"varint,7,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	Description string          `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{6}
}

func (x *Item) GetBalanceType() BalanceTypeEnum {
	if x != nil {
		return x.BalanceType
	}
	return BalanceTypeEnum_BALANCE_TYPE_UNSPECIFIED
}

func (x *Item) GetStartPeriod() string {
	if x != nil {
		return x.StartPeriod
	}
	return ""
}

func (x *Item) GetEndPeriod() string {
	if x != nil {
		return x.EndPeriod
	}
	return ""
}

func (x *Item) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Item) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Item) GetDiscount() int32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *Item) GetTotalPrice() int32 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status                StatusEnum          `protobuf:"varint,2,opt,name=status,proto3,enum=invoice.StatusEnum" json:"status,omitempty"`
	InvoiceNumber         string              `protobuf:"bytes,3,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	RequestNumber         string              `protobuf:"bytes,4,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	ChannelName           string              `protobuf:"bytes,5,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	PaymentType           PaymentTypeEnum     `protobuf:"varint,6,opt,name=payment_type,json=paymentType,proto3,enum=invoice.PaymentTypeEnum" json:"payment_type,omitempty"`
	TransactionType       TransactionTypeEnum `protobuf:"varint,7,opt,name=transaction_type,json=transactionType,proto3,enum=invoice.TransactionTypeEnum" json:"transaction_type,omitempty"`
	InvoiceRequestDueDate string              `protobuf:"bytes,8,opt,name=invoice_request_due_date,json=invoiceRequestDueDate,proto3" json:"invoice_request_due_date,omitempty"`
	InvoiceDueDate        string              `protobuf:"bytes,9,opt,name=invoice_due_date,json=invoiceDueDate,proto3" json:"invoice_due_date,omitempty"`
	CutOffDate            string              `protobuf:"bytes,10,opt,name=cut_off_date,json=cutOffDate,proto3" json:"cut_off_date,omitempty"`
	RequestRejectReason   string              `protobuf:"bytes,11,opt,name=request_reject_reason,json=requestRejectReason,proto3" json:"request_reject_reason,omitempty"`
	ItemDetails           []*Item             `protobuf:"bytes,12,rep,name=item_details,json=itemDetails,proto3" json:"item_details,omitempty"`
	CreatedAt             string              `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{7}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetStatus() StatusEnum {
	if x != nil {
		return x.Status
	}
	return StatusEnum_STATUS_UNSPECIFIED
}

func (x *Transaction) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *Transaction) GetRequestNumber() string {
	if x != nil {
		return x.RequestNumber
	}
	return ""
}

func (x *Transaction) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *Transaction) GetPaymentType() PaymentTypeEnum {
	if x != nil {
		return x.PaymentType
	}
	return PaymentTypeEnum_PAYMENT_TYPE_UNSPECIFIED
}

func (x *Transaction) GetTransactionType() TransactionTypeEnum {
	if x != nil {
		return x.TransactionType
	}
	return TransactionTypeEnum_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *Transaction) GetInvoiceRequestDueDate() string {
	if x != nil {
		return x.InvoiceRequestDueDate
	}
	return ""
}

func (x *Transaction) GetInvoiceDueDate() string {
	if x != nil {
		return x.InvoiceDueDate
	}
	return ""
}

func (x *Transaction) GetCutOffDate() string {
	if x != nil {
		return x.CutOffDate
	}
	return ""
}

func (x *Transaction) GetRequestRejectReason() string {
	if x != nil {
		return x.RequestRejectReason
	}
	return ""
}

func (x *Transaction) GetItemDetails() []*Item {
	if x != nil {
		return x.ItemDetails
	}
	return nil
}

func (x *Transaction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type TransactionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction        *TransactionEntity         `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	CustomerRequest    *CustomerRequestEntity     `protobuf:"bytes,2,opt,name=customer_request,json=customerRequest,proto3" json:"customer_request,omitempty"`
	Customer           *CustomerEntity            `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	Payment            *PaymentEntity             `protobuf:"bytes,4,opt,name=payment,proto3" json:"payment,omitempty"`
	Invoice            *InvoiceEntity             `protobuf:"bytes,5,opt,name=invoice,proto3" json:"invoice,omitempty"`
	TransactionDetails []*TransactionDetailEntity `protobuf:"bytes,6,rep,name=transaction_details,json=transactionDetails,proto3" json:"transaction_details,omitempty"`
}

func (x *TransactionDetail) Reset() {
	*x = TransactionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetail) ProtoMessage() {}

func (x *TransactionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetail.ProtoReflect.Descriptor instead.
func (*TransactionDetail) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{8}
}

func (x *TransactionDetail) GetTransaction() *TransactionEntity {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TransactionDetail) GetCustomerRequest() *CustomerRequestEntity {
	if x != nil {
		return x.CustomerRequest
	}
	return nil
}

func (x *TransactionDetail) GetCustomer() *CustomerEntity {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *TransactionDetail) GetPayment() *PaymentEntity {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *TransactionDetail) GetInvoice() *InvoiceEntity {
	if x != nil {
		return x.Invoice
	}
	return nil
}

func (x *TransactionDetail) GetTransactionDetails() []*TransactionDetailEntity {
	if x != nil {
		return x.TransactionDetails
	}
	return nil
}

// ===========================
// Get All Transaction
// ===========================
type GetAllTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate       string              `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate         string              `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Source          SourceEnum          `protobuf:"varint,3,opt,name=source,proto3,enum=invoice.SourceEnum" json:"source,omitempty"`
	TransactionType TransactionTypeEnum `protobuf:"varint,4,opt,name=transaction_type,json=transactionType,proto3,enum=invoice.TransactionTypeEnum" json:"transaction_type,omitempty"`
	PaymentType     PaymentTypeEnum     `protobuf:"varint,5,opt,name=payment_type,json=paymentType,proto3,enum=invoice.PaymentTypeEnum" json:"payment_type,omitempty"`
	BalanceType     BalanceTypeEnum     `protobuf:"varint,6,opt,name=balance_type,json=balanceType,proto3,enum=invoice.BalanceTypeEnum" json:"balance_type,omitempty"`
	Status          StatusEnum          `protobuf:"varint,7,opt,name=status,proto3,enum=invoice.StatusEnum" json:"status,omitempty"`
	ChannelCode     string              `protobuf:"bytes,8,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	Q               string              `protobuf:"bytes,9,opt,name=q,proto3" json:"q,omitempty"`
}

func (x *GetAllTransactionRequest) Reset() {
	*x = GetAllTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTransactionRequest) ProtoMessage() {}

func (x *GetAllTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetAllTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllTransactionRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetAllTransactionRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetAllTransactionRequest) GetSource() SourceEnum {
	if x != nil {
		return x.Source
	}
	return SourceEnum_SOURCE_UNSPECIFIED
}

func (x *GetAllTransactionRequest) GetTransactionType() TransactionTypeEnum {
	if x != nil {
		return x.TransactionType
	}
	return TransactionTypeEnum_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *GetAllTransactionRequest) GetPaymentType() PaymentTypeEnum {
	if x != nil {
		return x.PaymentType
	}
	return PaymentTypeEnum_PAYMENT_TYPE_UNSPECIFIED
}

func (x *GetAllTransactionRequest) GetBalanceType() BalanceTypeEnum {
	if x != nil {
		return x.BalanceType
	}
	return BalanceTypeEnum_BALANCE_TYPE_UNSPECIFIED
}

func (x *GetAllTransactionRequest) GetStatus() StatusEnum {
	if x != nil {
		return x.Status
	}
	return StatusEnum_STATUS_UNSPECIFIED
}

func (x *GetAllTransactionRequest) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *GetAllTransactionRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type GetAllTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *BaseResponse  `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Message  string         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data     []*Transaction `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Meta     *Pagination    `protobuf:"bytes,4,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetAllTransactionResponse) Reset() {
	*x = GetAllTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTransactionResponse) ProtoMessage() {}

func (x *GetAllTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetAllTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{10}
}

func (x *GetAllTransactionResponse) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetAllTransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllTransactionResponse) GetData() []*Transaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllTransactionResponse) GetMeta() *Pagination {
	if x != nil {
		return x.Meta
	}
	return nil
}

// ===========================
// Get Transaction Detail
// ===========================
type GetTransactionDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTransactionDetailRequest) Reset() {
	*x = GetTransactionDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionDetailRequest) ProtoMessage() {}

func (x *GetTransactionDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionDetailRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionDetailRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{11}
}

func (x *GetTransactionDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTransactionDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *BaseResponse      `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Message  string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data     *TransactionDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTransactionDetailResponse) Reset() {
	*x = GetTransactionDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionDetailResponse) ProtoMessage() {}

func (x *GetTransactionDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionDetailResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionDetailResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{12}
}

func (x *GetTransactionDetailResponse) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *GetTransactionDetailResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetTransactionDetailResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

// ===========================
// Create Transaction
// ===========================
type CreateTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionType       TransactionTypeEnum `protobuf:"varint,1,opt,name=transaction_type,json=transactionType,proto3,enum=invoice.TransactionTypeEnum" json:"transaction_type,omitempty"`
	ChannelCode           string              `protobuf:"bytes,2,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	TransferFrom          string              `protobuf:"bytes,3,opt,name=transfer_from,json=transferFrom,proto3" json:"transfer_from,omitempty"`
	TransferTo            string              `protobuf:"bytes,4,opt,name=transfer_to,json=transferTo,proto3" json:"transfer_to,omitempty"`
	ItemDetails           []*Item             `protobuf:"bytes,5,rep,name=item_details,json=itemDetails,proto3" json:"item_details,omitempty"`
	InvoiceRequestDueDate string              `protobuf:"bytes,6,opt,name=invoice_request_due_date,json=invoiceRequestDueDate,proto3" json:"invoice_request_due_date,omitempty"`
	PaymentTerm           string              `protobuf:"bytes,7,opt,name=payment_term,json=paymentTerm,proto3" json:"payment_term,omitempty"`
	SendInvoiceTo         string              `protobuf:"bytes,8,opt,name=send_invoice_to,json=sendInvoiceTo,proto3" json:"send_invoice_to,omitempty"`
	Cc                    string              `protobuf:"bytes,9,opt,name=cc,proto3" json:"cc,omitempty"`
	Bcc                   string              `protobuf:"bytes,10,opt,name=bcc,proto3" json:"bcc,omitempty"`
}

func (x *CreateTransactionRequest) Reset() {
	*x = CreateTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionRequest) ProtoMessage() {}

func (x *CreateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{13}
}

func (x *CreateTransactionRequest) GetTransactionType() TransactionTypeEnum {
	if x != nil {
		return x.TransactionType
	}
	return TransactionTypeEnum_TRANSACTION_TYPE_UNSPECIFIED
}

func (x *CreateTransactionRequest) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *CreateTransactionRequest) GetTransferFrom() string {
	if x != nil {
		return x.TransferFrom
	}
	return ""
}

func (x *CreateTransactionRequest) GetTransferTo() string {
	if x != nil {
		return x.TransferTo
	}
	return ""
}

func (x *CreateTransactionRequest) GetItemDetails() []*Item {
	if x != nil {
		return x.ItemDetails
	}
	return nil
}

func (x *CreateTransactionRequest) GetInvoiceRequestDueDate() string {
	if x != nil {
		return x.InvoiceRequestDueDate
	}
	return ""
}

func (x *CreateTransactionRequest) GetPaymentTerm() string {
	if x != nil {
		return x.PaymentTerm
	}
	return ""
}

func (x *CreateTransactionRequest) GetSendInvoiceTo() string {
	if x != nil {
		return x.SendInvoiceTo
	}
	return ""
}

func (x *CreateTransactionRequest) GetCc() string {
	if x != nil {
		return x.Cc
	}
	return ""
}

func (x *CreateTransactionRequest) GetBcc() string {
	if x != nil {
		return x.Bcc
	}
	return ""
}

// TODO: TBD create transaction response
type CreateTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *BaseResponse      `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Message  string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data     *TransactionDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateTransactionResponse) Reset() {
	*x = CreateTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionResponse) ProtoMessage() {}

func (x *CreateTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionResponse.ProtoReflect.Descriptor instead.
func (*CreateTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{14}
}

func (x *CreateTransactionResponse) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *CreateTransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateTransactionResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

// ===========================
// Create Request Invoice
// ===========================
type CreateRequestInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RequesterName   string  `protobuf:"bytes,2,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	RequestedAt     string  `protobuf:"bytes,3,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	ChannelCode     string  `protobuf:"bytes,4,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	CompanyName     string  `protobuf:"bytes,5,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	ProjectName     string  `protobuf:"bytes,6,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Pic             string  `protobuf:"bytes,7,opt,name=pic,proto3" json:"pic,omitempty"`
	BillToEmail     string  `protobuf:"bytes,8,opt,name=bill_to_email,json=billToEmail,proto3" json:"bill_to_email,omitempty"`
	PhoneNumberPic  string  `protobuf:"bytes,9,opt,name=phone_number_pic,json=phoneNumberPic,proto3" json:"phone_number_pic,omitempty"`
	InvoiceShipment string  `protobuf:"bytes,10,opt,name=invoice_shipment,json=invoiceShipment,proto3" json:"invoice_shipment,omitempty"`
	IntegrationType string  `protobuf:"bytes,11,opt,name=integration_type,json=integrationType,proto3" json:"integration_type,omitempty"`
	LetterAddress   string  `protobuf:"bytes,12,opt,name=letter_address,json=letterAddress,proto3" json:"letter_address,omitempty"`
	ItemDetails     []*Item `protobuf:"bytes,13,rep,name=item_details,json=itemDetails,proto3" json:"item_details,omitempty"`
}

func (x *CreateRequestInvoiceRequest) Reset() {
	*x = CreateRequestInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequestInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequestInvoiceRequest) ProtoMessage() {}

func (x *CreateRequestInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequestInvoiceRequest.ProtoReflect.Descriptor instead.
func (*CreateRequestInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{15}
}

func (x *CreateRequestInvoiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetRequesterName() string {
	if x != nil {
		return x.RequesterName
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetRequestedAt() string {
	if x != nil {
		return x.RequestedAt
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetBillToEmail() string {
	if x != nil {
		return x.BillToEmail
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetPhoneNumberPic() string {
	if x != nil {
		return x.PhoneNumberPic
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetInvoiceShipment() string {
	if x != nil {
		return x.InvoiceShipment
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetIntegrationType() string {
	if x != nil {
		return x.IntegrationType
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetLetterAddress() string {
	if x != nil {
		return x.LetterAddress
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetItemDetails() []*Item {
	if x != nil {
		return x.ItemDetails
	}
	return nil
}

// TODO: TBD create invoice request response
type CreateRequestInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *BaseResponse      `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Message  string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data     *TransactionDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateRequestInvoiceResponse) Reset() {
	*x = CreateRequestInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequestInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequestInvoiceResponse) ProtoMessage() {}

func (x *CreateRequestInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequestInvoiceResponse.ProtoReflect.Descriptor instead.
func (*CreateRequestInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{16}
}

func (x *CreateRequestInvoiceResponse) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *CreateRequestInvoiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateRequestInvoiceResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

// ===========================
// Create Invoice
// ===========================
type CreateInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelCode    string  `protobuf:"bytes,2,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	PaymentDueDate string  `protobuf:"bytes,3,opt,name=payment_due_date,json=paymentDueDate,proto3" json:"payment_due_date,omitempty"`
	PaymentTerm    string  `protobuf:"bytes,4,opt,name=payment_term,json=paymentTerm,proto3" json:"payment_term,omitempty"`
	ItemDetails    []*Item `protobuf:"bytes,5,rep,name=item_details,json=itemDetails,proto3" json:"item_details,omitempty"`
	Tax            int32   `protobuf:"varint,6,opt,name=tax,proto3" json:"tax,omitempty"`
	// repeated TransactionDocument supporting_docs = 7;
	SendInvoiceRequestTo string `protobuf:"bytes,8,opt,name=send_invoice_request_to,json=sendInvoiceRequestTo,proto3" json:"send_invoice_request_to,omitempty"`
	Cc                   string `protobuf:"bytes,9,opt,name=cc,proto3" json:"cc,omitempty"`
	Bcc                  string `protobuf:"bytes,10,opt,name=bcc,proto3" json:"bcc,omitempty"`
}

func (x *CreateInvoiceRequest) Reset() {
	*x = CreateInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvoiceRequest) ProtoMessage() {}

func (x *CreateInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvoiceRequest.ProtoReflect.Descriptor instead.
func (*CreateInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{17}
}

func (x *CreateInvoiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateInvoiceRequest) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *CreateInvoiceRequest) GetPaymentDueDate() string {
	if x != nil {
		return x.PaymentDueDate
	}
	return ""
}

func (x *CreateInvoiceRequest) GetPaymentTerm() string {
	if x != nil {
		return x.PaymentTerm
	}
	return ""
}

func (x *CreateInvoiceRequest) GetItemDetails() []*Item {
	if x != nil {
		return x.ItemDetails
	}
	return nil
}

func (x *CreateInvoiceRequest) GetTax() int32 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *CreateInvoiceRequest) GetSendInvoiceRequestTo() string {
	if x != nil {
		return x.SendInvoiceRequestTo
	}
	return ""
}

func (x *CreateInvoiceRequest) GetCc() string {
	if x != nil {
		return x.Cc
	}
	return ""
}

func (x *CreateInvoiceRequest) GetBcc() string {
	if x != nil {
		return x.Bcc
	}
	return ""
}

// TODO: TBD create invoice response
type CreateInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *BaseResponse      `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Message  string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data     *TransactionDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateInvoiceResponse) Reset() {
	*x = CreateInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvoiceResponse) ProtoMessage() {}

func (x *CreateInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvoiceResponse.ProtoReflect.Descriptor instead.
func (*CreateInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{18}
}

func (x *CreateInvoiceResponse) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *CreateInvoiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateInvoiceResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

// ===========================
// Approve Transaction
// ===========================
type ApproveTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceRequestDueDate string `protobuf:"bytes,2,opt,name=invoice_request_due_date,json=invoiceRequestDueDate,proto3" json:"invoice_request_due_date,omitempty"`
}

func (x *ApproveTransactionRequest) Reset() {
	*x = ApproveTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTransactionRequest) ProtoMessage() {}

func (x *ApproveTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTransactionRequest.ProtoReflect.Descriptor instead.
func (*ApproveTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{19}
}

func (x *ApproveTransactionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApproveTransactionRequest) GetInvoiceRequestDueDate() string {
	if x != nil {
		return x.InvoiceRequestDueDate
	}
	return ""
}

type ApproveTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *BaseResponse      `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Message  string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data     *TransactionDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ApproveTransactionResponse) Reset() {
	*x = ApproveTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTransactionResponse) ProtoMessage() {}

func (x *ApproveTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTransactionResponse.ProtoReflect.Descriptor instead.
func (*ApproveTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{20}
}

func (x *ApproveTransactionResponse) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *ApproveTransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApproveTransactionResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

// ===========================
// Reject Transaction
// ===========================
type RejectTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RequestRejectReason string `protobuf:"bytes,2,opt,name=request_reject_reason,json=requestRejectReason,proto3" json:"request_reject_reason,omitempty"`
}

func (x *RejectTransactionRequest) Reset() {
	*x = RejectTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTransactionRequest) ProtoMessage() {}

func (x *RejectTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTransactionRequest.ProtoReflect.Descriptor instead.
func (*RejectTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{21}
}

func (x *RejectTransactionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RejectTransactionRequest) GetRequestRejectReason() string {
	if x != nil {
		return x.RequestRejectReason
	}
	return ""
}

type RejectTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response *BaseResponse      `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Message  string             `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data     *TransactionDetail `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RejectTransactionResponse) Reset() {
	*x = RejectTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTransactionResponse) ProtoMessage() {}

func (x *RejectTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTransactionResponse.ProtoReflect.Descriptor instead.
func (*RejectTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_proto_rawDescGZIP(), []int{22}
}

func (x *RejectTransactionResponse) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *RejectTransactionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RejectTransactionResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_api_sales_proto_transaction_proto protoreflect.FileDescriptor

var file_api_sales_proto_transaction_proto_rawDesc = []byte{
	0x0a, 0x21, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x1a, 0x19, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf3, 0x04, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x13, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x74,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x54, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x47, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbd, 0x03,
	0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30,
	0x0a, 0x14, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xee, 0x03,
	0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x37, 0x0a, 0x18, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x70, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x70,
	0x70, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x70, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x70, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc0,
	0x03, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x96, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3b, 0x0a, 0x0c, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e,
	0x64, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcb, 0x04, 0x0a, 0x0b, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37,
	0x0a, 0x18, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x15, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x75, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x69, 0x74,
	0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x88, 0x03, 0x0a, 0x11, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x3c,
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x10,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x08, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30,
	0x0a, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x12, 0x51, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0xa2, 0x03, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a,
	0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x71, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x22, 0xb5, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61,
	0x22, 0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x98, 0x01, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa4, 0x03, 0x0a, 0x18, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x12, 0x30, 0x0a, 0x0c, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b,
	0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64,
	0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x65, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x63, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x63,
	0x63, 0x22, 0x95, 0x01, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xef, 0x03, 0x0a, 0x1b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x70, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x22,
	0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x69, 0x63, 0x12, 0x29, 0x0a, 0x10,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x74, 0x74,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x0c, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b,
	0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x02, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12,
	0x30, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x74, 0x61, 0x78, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x63,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x63,
	0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x63, 0x63, 0x22, 0x91, 0x01, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x64, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a,
	0x18, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44,
	0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x5e, 0x0a, 0x18, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x95, 0x01, 0x0a, 0x19, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x4e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a,
	0x0f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c,
	0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x45, 0x58, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x2a, 0x72, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x20,
	0x0a, 0x1c, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x1a, 0x0a, 0x16, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x4f, 0x50, 0x55, 0x50, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x64, 0x0a, 0x0f, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1c,
	0x0a, 0x18, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x45,
	0x50, 0x41, 0x49, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x50, 0x41, 0x49, 0x44, 0x10,
	0x02, 0x2a, 0xeb, 0x02, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x50, 0x50, 0x52, 0x4f,
	0x56, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45,
	0x53, 0x54, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x49,
	0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x45,
	0x52, 0x10, 0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x52,
	0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e,
	0x50, 0x41, 0x49, 0x44, 0x10, 0x09, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x44, 0x55, 0x45,
	0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x57, 0x41, 0x49,
	0x54, 0x49, 0x4e, 0x47, 0x5f, 0x56, 0x45, 0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x0b, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x50, 0x41,
	0x49, 0x44, 0x10, 0x0c, 0x12, 0x19, 0x0a, 0x15, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52,
	0x45, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x50, 0x41, 0x59, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x0d, 0x2a,
	0xfd, 0x02, 0x0a, 0x0f, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x45, 0x53, 0x49, 0x47, 0x4e, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x41, 0x4c,
	0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x54, 0x50, 0x10, 0x02, 0x12,
	0x19, 0x0a, 0x15, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x45, 0x4d, 0x41, 0x54, 0x45, 0x52, 0x41, 0x49, 0x10, 0x03, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x41,
	0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x41, 0x4c,
	0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x50, 0x4c, 0x4f, 0x59,
	0x45, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12,
	0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4c, 0x41,
	0x53, 0x54, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x43, 0x52, 0x10, 0x07, 0x12, 0x21, 0x0a, 0x1d, 0x42, 0x41,
	0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x41, 0x43, 0x45, 0x5f,
	0x52, 0x45, 0x43, 0x4f, 0x47, 0x4e, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x08, 0x12, 0x1b, 0x0a,
	0x17, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45,
	0x4d, 0x4f, 0x47, 0x52, 0x41, 0x50, 0x48, 0x59, 0x10, 0x09, 0x12, 0x20, 0x0a, 0x1c, 0x42, 0x41,
	0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x44, 0x5f, 0x56, 0x45,
	0x52, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x16, 0x0a, 0x12,
	0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x53, 0x45,
	0x41, 0x4c, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x41, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x56, 0x45, 0x4e, 0x45, 0x53, 0x53, 0x10, 0x0c, 0x32,
	0xaf, 0x05, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x50, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x5f, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_sales_proto_transaction_proto_rawDescOnce sync.Once
	file_api_sales_proto_transaction_proto_rawDescData = file_api_sales_proto_transaction_proto_rawDesc
)

func file_api_sales_proto_transaction_proto_rawDescGZIP() []byte {
	file_api_sales_proto_transaction_proto_rawDescOnce.Do(func() {
		file_api_sales_proto_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_sales_proto_transaction_proto_rawDescData)
	})
	return file_api_sales_proto_transaction_proto_rawDescData
}

var file_api_sales_proto_transaction_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_api_sales_proto_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_sales_proto_transaction_proto_goTypes = []interface{}{
	(SourceEnum)(0),                      // 0: invoice.SourceEnum
	(TransactionTypeEnum)(0),             // 1: invoice.TransactionTypeEnum
	(PaymentTypeEnum)(0),                 // 2: invoice.PaymentTypeEnum
	(StatusEnum)(0),                      // 3: invoice.StatusEnum
	(BalanceTypeEnum)(0),                 // 4: invoice.BalanceTypeEnum
	(*TransactionEntity)(nil),            // 5: invoice.TransactionEntity
	(*CustomerRequestEntity)(nil),        // 6: invoice.CustomerRequestEntity
	(*CustomerEntity)(nil),               // 7: invoice.CustomerEntity
	(*PaymentEntity)(nil),                // 8: invoice.PaymentEntity
	(*InvoiceEntity)(nil),                // 9: invoice.InvoiceEntity
	(*TransactionDetailEntity)(nil),      // 10: invoice.TransactionDetailEntity
	(*Item)(nil),                         // 11: invoice.Item
	(*Transaction)(nil),                  // 12: invoice.Transaction
	(*TransactionDetail)(nil),            // 13: invoice.TransactionDetail
	(*GetAllTransactionRequest)(nil),     // 14: invoice.GetAllTransactionRequest
	(*GetAllTransactionResponse)(nil),    // 15: invoice.GetAllTransactionResponse
	(*GetTransactionDetailRequest)(nil),  // 16: invoice.GetTransactionDetailRequest
	(*GetTransactionDetailResponse)(nil), // 17: invoice.GetTransactionDetailResponse
	(*CreateTransactionRequest)(nil),     // 18: invoice.CreateTransactionRequest
	(*CreateTransactionResponse)(nil),    // 19: invoice.CreateTransactionResponse
	(*CreateRequestInvoiceRequest)(nil),  // 20: invoice.CreateRequestInvoiceRequest
	(*CreateRequestInvoiceResponse)(nil), // 21: invoice.CreateRequestInvoiceResponse
	(*CreateInvoiceRequest)(nil),         // 22: invoice.CreateInvoiceRequest
	(*CreateInvoiceResponse)(nil),        // 23: invoice.CreateInvoiceResponse
	(*ApproveTransactionRequest)(nil),    // 24: invoice.ApproveTransactionRequest
	(*ApproveTransactionResponse)(nil),   // 25: invoice.ApproveTransactionResponse
	(*RejectTransactionRequest)(nil),     // 26: invoice.RejectTransactionRequest
	(*RejectTransactionResponse)(nil),    // 27: invoice.RejectTransactionResponse
	(*BaseResponse)(nil),                 // 28: meta.BaseResponse
	(*Pagination)(nil),                   // 29: meta.Pagination
}
var file_api_sales_proto_transaction_proto_depIdxs = []int32{
	3,  // 0: invoice.TransactionEntity.status:type_name -> invoice.StatusEnum
	1,  // 1: invoice.TransactionEntity.transaction_type:type_name -> invoice.TransactionTypeEnum
	0,  // 2: invoice.TransactionEntity.source:type_name -> invoice.SourceEnum
	2,  // 3: invoice.PaymentEntity.payment_type:type_name -> invoice.PaymentTypeEnum
	4,  // 4: invoice.Item.balance_type:type_name -> invoice.BalanceTypeEnum
	3,  // 5: invoice.Transaction.status:type_name -> invoice.StatusEnum
	2,  // 6: invoice.Transaction.payment_type:type_name -> invoice.PaymentTypeEnum
	1,  // 7: invoice.Transaction.transaction_type:type_name -> invoice.TransactionTypeEnum
	11, // 8: invoice.Transaction.item_details:type_name -> invoice.Item
	5,  // 9: invoice.TransactionDetail.transaction:type_name -> invoice.TransactionEntity
	6,  // 10: invoice.TransactionDetail.customer_request:type_name -> invoice.CustomerRequestEntity
	7,  // 11: invoice.TransactionDetail.customer:type_name -> invoice.CustomerEntity
	8,  // 12: invoice.TransactionDetail.payment:type_name -> invoice.PaymentEntity
	9,  // 13: invoice.TransactionDetail.invoice:type_name -> invoice.InvoiceEntity
	10, // 14: invoice.TransactionDetail.transaction_details:type_name -> invoice.TransactionDetailEntity
	0,  // 15: invoice.GetAllTransactionRequest.source:type_name -> invoice.SourceEnum
	1,  // 16: invoice.GetAllTransactionRequest.transaction_type:type_name -> invoice.TransactionTypeEnum
	2,  // 17: invoice.GetAllTransactionRequest.payment_type:type_name -> invoice.PaymentTypeEnum
	4,  // 18: invoice.GetAllTransactionRequest.balance_type:type_name -> invoice.BalanceTypeEnum
	3,  // 19: invoice.GetAllTransactionRequest.status:type_name -> invoice.StatusEnum
	28, // 20: invoice.GetAllTransactionResponse.response:type_name -> meta.BaseResponse
	12, // 21: invoice.GetAllTransactionResponse.data:type_name -> invoice.Transaction
	29, // 22: invoice.GetAllTransactionResponse.meta:type_name -> meta.Pagination
	28, // 23: invoice.GetTransactionDetailResponse.response:type_name -> meta.BaseResponse
	13, // 24: invoice.GetTransactionDetailResponse.data:type_name -> invoice.TransactionDetail
	1,  // 25: invoice.CreateTransactionRequest.transaction_type:type_name -> invoice.TransactionTypeEnum
	11, // 26: invoice.CreateTransactionRequest.item_details:type_name -> invoice.Item
	28, // 27: invoice.CreateTransactionResponse.response:type_name -> meta.BaseResponse
	13, // 28: invoice.CreateTransactionResponse.data:type_name -> invoice.TransactionDetail
	11, // 29: invoice.CreateRequestInvoiceRequest.item_details:type_name -> invoice.Item
	28, // 30: invoice.CreateRequestInvoiceResponse.response:type_name -> meta.BaseResponse
	13, // 31: invoice.CreateRequestInvoiceResponse.data:type_name -> invoice.TransactionDetail
	11, // 32: invoice.CreateInvoiceRequest.item_details:type_name -> invoice.Item
	28, // 33: invoice.CreateInvoiceResponse.response:type_name -> meta.BaseResponse
	13, // 34: invoice.CreateInvoiceResponse.data:type_name -> invoice.TransactionDetail
	28, // 35: invoice.ApproveTransactionResponse.response:type_name -> meta.BaseResponse
	13, // 36: invoice.ApproveTransactionResponse.data:type_name -> invoice.TransactionDetail
	28, // 37: invoice.RejectTransactionResponse.response:type_name -> meta.BaseResponse
	13, // 38: invoice.RejectTransactionResponse.data:type_name -> invoice.TransactionDetail
	14, // 39: invoice.TransactionService.GetAllTransaction:input_type -> invoice.GetAllTransactionRequest
	16, // 40: invoice.TransactionService.GetTransactionDetail:input_type -> invoice.GetTransactionDetailRequest
	18, // 41: invoice.TransactionService.CreateTransaction:input_type -> invoice.CreateTransactionRequest
	20, // 42: invoice.TransactionService.CreateRequestInvoice:input_type -> invoice.CreateRequestInvoiceRequest
	22, // 43: invoice.TransactionService.CreateInvoice:input_type -> invoice.CreateInvoiceRequest
	24, // 44: invoice.TransactionService.ApproveTransaction:input_type -> invoice.ApproveTransactionRequest
	26, // 45: invoice.TransactionService.RejectTransaction:input_type -> invoice.RejectTransactionRequest
	15, // 46: invoice.TransactionService.GetAllTransaction:output_type -> invoice.GetAllTransactionResponse
	17, // 47: invoice.TransactionService.GetTransactionDetail:output_type -> invoice.GetTransactionDetailResponse
	19, // 48: invoice.TransactionService.CreateTransaction:output_type -> invoice.CreateTransactionResponse
	21, // 49: invoice.TransactionService.CreateRequestInvoice:output_type -> invoice.CreateRequestInvoiceResponse
	23, // 50: invoice.TransactionService.CreateInvoice:output_type -> invoice.CreateInvoiceResponse
	25, // 51: invoice.TransactionService.ApproveTransaction:output_type -> invoice.ApproveTransactionResponse
	27, // 52: invoice.TransactionService.RejectTransaction:output_type -> invoice.RejectTransactionResponse
	46, // [46:53] is the sub-list for method output_type
	39, // [39:46] is the sub-list for method input_type
	39, // [39:39] is the sub-list for extension type_name
	39, // [39:39] is the sub-list for extension extendee
	0,  // [0:39] is the sub-list for field type_name
}

func init() { file_api_sales_proto_transaction_proto_init() }
func file_api_sales_proto_transaction_proto_init() {
	if File_api_sales_proto_transaction_proto != nil {
		return
	}
	file_api_meta_proto_meta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_sales_proto_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerRequestEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvoiceEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetailEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequestInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequestInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_sales_proto_transaction_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_sales_proto_transaction_proto_goTypes,
		DependencyIndexes: file_api_sales_proto_transaction_proto_depIdxs,
		EnumInfos:         file_api_sales_proto_transaction_proto_enumTypes,
		MessageInfos:      file_api_sales_proto_transaction_proto_msgTypes,
	}.Build()
	File_api_sales_proto_transaction_proto = out.File
	file_api_sales_proto_transaction_proto_rawDesc = nil
	file_api_sales_proto_transaction_proto_goTypes = nil
	file_api_sales_proto_transaction_proto_depIdxs = nil
}
