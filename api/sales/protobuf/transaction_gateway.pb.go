// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: api/sales/proto/transaction_gateway.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ===========================
// Messages
// ===========================
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	BalanceType string `protobuf:"bytes,2,opt,name=balance_type,json=balanceType,proto3" json:"balance_type,omitempty"`
	StartPeriod string `protobuf:"bytes,3,opt,name=start_period,json=startPeriod,proto3" json:"start_period,omitempty"`
	EndPeriod   string `protobuf:"bytes,4,opt,name=end_period,json=endPeriod,proto3" json:"end_period,omitempty"`
	Quantity    int64  `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price       int64  `protobuf:"varint,6,opt,name=price,proto3" json:"price,omitempty"`
	Discount    int64  `protobuf:"varint,7,opt,name=discount,proto3" json:"discount,omitempty"`
	TotalPrice  int64  `protobuf:"varint,8,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	Description string `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Item) GetBalanceType() string {
	if x != nil {
		return x.BalanceType
	}
	return ""
}

func (x *Item) GetStartPeriod() string {
	if x != nil {
		return x.StartPeriod
	}
	return ""
}

func (x *Item) GetEndPeriod() string {
	if x != nil {
		return x.EndPeriod
	}
	return ""
}

func (x *Item) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Item) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Item) GetDiscount() int64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *Item) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status                string  `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	InvoiceNumber         string  `protobuf:"bytes,3,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	RequestNumber         string  `protobuf:"bytes,4,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	ChannelName           string  `protobuf:"bytes,5,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	PaymentType           string  `protobuf:"bytes,6,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	TransactionType       string  `protobuf:"bytes,7,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	InvoiceRequestDueDate string  `protobuf:"bytes,8,opt,name=invoice_request_due_date,json=invoiceRequestDueDate,proto3" json:"invoice_request_due_date,omitempty"`
	InvoiceDueDate        string  `protobuf:"bytes,9,opt,name=invoice_due_date,json=invoiceDueDate,proto3" json:"invoice_due_date,omitempty"`
	CutOffDate            string  `protobuf:"bytes,10,opt,name=cut_off_date,json=cutOffDate,proto3" json:"cut_off_date,omitempty"`
	RequestRejectReason   string  `protobuf:"bytes,11,opt,name=request_reject_reason,json=requestRejectReason,proto3" json:"request_reject_reason,omitempty"`
	ItemDetails           []*Item `protobuf:"bytes,12,rep,name=item_details,json=itemDetails,proto3" json:"item_details,omitempty"`
	CreatedAt             string  `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CustomerId            string  `protobuf:"bytes,14,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PaymentId             string  `protobuf:"bytes,15,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *Transaction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Transaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Transaction) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *Transaction) GetRequestNumber() string {
	if x != nil {
		return x.RequestNumber
	}
	return ""
}

func (x *Transaction) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *Transaction) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *Transaction) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *Transaction) GetInvoiceRequestDueDate() string {
	if x != nil {
		return x.InvoiceRequestDueDate
	}
	return ""
}

func (x *Transaction) GetInvoiceDueDate() string {
	if x != nil {
		return x.InvoiceDueDate
	}
	return ""
}

func (x *Transaction) GetCutOffDate() string {
	if x != nil {
		return x.CutOffDate
	}
	return ""
}

func (x *Transaction) GetRequestRejectReason() string {
	if x != nil {
		return x.RequestRejectReason
	}
	return ""
}

func (x *Transaction) GetItemDetails() []*Item {
	if x != nil {
		return x.ItemDetails
	}
	return nil
}

func (x *Transaction) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Transaction) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Transaction) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

type TransactionDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status                string                        `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	InvoiceNumber         string                        `protobuf:"bytes,3,opt,name=invoice_number,json=invoiceNumber,proto3" json:"invoice_number,omitempty"`
	RequestNumber         string                        `protobuf:"bytes,4,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	Origin                string                        `protobuf:"bytes,5,opt,name=origin,proto3" json:"origin,omitempty"`
	Source                string                        `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`
	ChannelName           string                        `protobuf:"bytes,7,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	ChannelCode           string                        `protobuf:"bytes,8,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	PaymentType           string                        `protobuf:"bytes,9,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	TransactionType       string                        `protobuf:"bytes,10,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	TransferFrom          string                        `protobuf:"bytes,11,opt,name=transfer_from,json=transferFrom,proto3" json:"transfer_from,omitempty"`
	TransferTo            string                        `protobuf:"bytes,12,opt,name=transfer_to,json=transferTo,proto3" json:"transfer_to,omitempty"`
	InvoiceRequestedAt    string                        `protobuf:"bytes,13,opt,name=invoice_requested_at,json=invoiceRequestedAt,proto3" json:"invoice_requested_at,omitempty"`
	RequestApprovedAt     string                        `protobuf:"bytes,14,opt,name=request_approved_at,json=requestApprovedAt,proto3" json:"request_approved_at,omitempty"`
	InvoiceRequestDueDate string                        `protobuf:"bytes,15,opt,name=invoice_request_due_date,json=invoiceRequestDueDate,proto3" json:"invoice_request_due_date,omitempty"`
	InvoiceDueDate        string                        `protobuf:"bytes,16,opt,name=invoice_due_date,json=invoiceDueDate,proto3" json:"invoice_due_date,omitempty"`
	CutOffDate            string                        `protobuf:"bytes,17,opt,name=cut_off_date,json=cutOffDate,proto3" json:"cut_off_date,omitempty"`
	PaymentTerm           string                        `protobuf:"bytes,18,opt,name=payment_term,json=paymentTerm,proto3" json:"payment_term,omitempty"`
	SendInvoiceRequestTo  string                        `protobuf:"bytes,19,opt,name=send_invoice_request_to,json=sendInvoiceRequestTo,proto3" json:"send_invoice_request_to,omitempty"`
	SendInvoiceTo         string                        `protobuf:"bytes,20,opt,name=send_invoice_to,json=sendInvoiceTo,proto3" json:"send_invoice_to,omitempty"`
	Cc                    string                        `protobuf:"bytes,21,opt,name=cc,proto3" json:"cc,omitempty"`
	Bcc                   string                        `protobuf:"bytes,22,opt,name=bcc,proto3" json:"bcc,omitempty"`
	BillToEmail           string                        `protobuf:"bytes,23,opt,name=bill_to_email,json=billToEmail,proto3" json:"bill_to_email,omitempty"`
	RequestRejectedAt     string                        `protobuf:"bytes,24,opt,name=request_rejected_at,json=requestRejectedAt,proto3" json:"request_rejected_at,omitempty"`
	RequestRejectReason   string                        `protobuf:"bytes,25,opt,name=request_reject_reason,json=requestRejectReason,proto3" json:"request_reject_reason,omitempty"`
	PaidAt                string                        `protobuf:"bytes,26,opt,name=paid_at,json=paidAt,proto3" json:"paid_at,omitempty"`
	PaymentProof          string                        `protobuf:"bytes,27,opt,name=payment_proof,json=paymentProof,proto3" json:"payment_proof,omitempty"`
	PaymentDueDate        string                        `protobuf:"bytes,28,opt,name=payment_due_date,json=paymentDueDate,proto3" json:"payment_due_date,omitempty"`
	PaymentRejectedAt     string                        `protobuf:"bytes,29,opt,name=payment_rejected_at,json=paymentRejectedAt,proto3" json:"payment_rejected_at,omitempty"`
	PaymentRejectReason   string                        `protobuf:"bytes,30,opt,name=payment_reject_reason,json=paymentRejectReason,proto3" json:"payment_reject_reason,omitempty"`
	CompanyName           string                        `protobuf:"bytes,31,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	ProjectName           string                        `protobuf:"bytes,32,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	RequesterName         string                        `protobuf:"bytes,33,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	CustomerName          string                        `protobuf:"bytes,34,opt,name=customer_name,json=customerName,proto3" json:"customer_name,omitempty"`
	Pic                   string                        `protobuf:"bytes,35,opt,name=pic,proto3" json:"pic,omitempty"`
	PhoneNumberPic        string                        `protobuf:"bytes,36,opt,name=phone_number_pic,json=phoneNumberPic,proto3" json:"phone_number_pic,omitempty"`
	IntegrationType       string                        `protobuf:"bytes,37,opt,name=integration_type,json=integrationType,proto3" json:"integration_type,omitempty"`
	WorkType              string                        `protobuf:"bytes,38,opt,name=work_type,json=workType,proto3" json:"work_type,omitempty"`
	LetterAddress         string                        `protobuf:"bytes,39,opt,name=letter_address,json=letterAddress,proto3" json:"letter_address,omitempty"`
	InvoiceShipment       string                        `protobuf:"bytes,40,opt,name=invoice_shipment,json=invoiceShipment,proto3" json:"invoice_shipment,omitempty"`
	InvoiceDocument       string                        `protobuf:"bytes,41,opt,name=invoice_document,json=invoiceDocument,proto3" json:"invoice_document,omitempty"`
	SupportingDocuments   []*SupportingDocumentResponse `protobuf:"bytes,42,rep,name=supporting_documents,json=supportingDocuments,proto3" json:"supporting_documents,omitempty"`
	ItemDetails           []*Item                       `protobuf:"bytes,43,rep,name=item_details,json=itemDetails,proto3" json:"item_details,omitempty"`
	TotalPayment          int64                         `protobuf:"varint,44,opt,name=total_payment,json=totalPayment,proto3" json:"total_payment,omitempty"`
	PpnReport             string                        `protobuf:"bytes,45,opt,name=ppn_report,json=ppnReport,proto3" json:"ppn_report,omitempty"`
	Ppn                   int64                         `protobuf:"varint,46,opt,name=ppn,proto3" json:"ppn,omitempty"`
	Signature             string                        `protobuf:"bytes,47,opt,name=signature,proto3" json:"signature,omitempty"`
	CreatedAt             string                        `protobuf:"bytes,48,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CustomerId            string                        `protobuf:"bytes,50,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	PaymentId             string                        `protobuf:"bytes,51,opt,name=payment_id,json=paymentId,proto3" json:"payment_id,omitempty"`
}

func (x *TransactionDetail) Reset() {
	*x = TransactionDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionDetail) ProtoMessage() {}

func (x *TransactionDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionDetail.ProtoReflect.Descriptor instead.
func (*TransactionDetail) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *TransactionDetail) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionDetail) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TransactionDetail) GetInvoiceNumber() string {
	if x != nil {
		return x.InvoiceNumber
	}
	return ""
}

func (x *TransactionDetail) GetRequestNumber() string {
	if x != nil {
		return x.RequestNumber
	}
	return ""
}

func (x *TransactionDetail) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *TransactionDetail) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *TransactionDetail) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *TransactionDetail) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *TransactionDetail) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *TransactionDetail) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *TransactionDetail) GetTransferFrom() string {
	if x != nil {
		return x.TransferFrom
	}
	return ""
}

func (x *TransactionDetail) GetTransferTo() string {
	if x != nil {
		return x.TransferTo
	}
	return ""
}

func (x *TransactionDetail) GetInvoiceRequestedAt() string {
	if x != nil {
		return x.InvoiceRequestedAt
	}
	return ""
}

func (x *TransactionDetail) GetRequestApprovedAt() string {
	if x != nil {
		return x.RequestApprovedAt
	}
	return ""
}

func (x *TransactionDetail) GetInvoiceRequestDueDate() string {
	if x != nil {
		return x.InvoiceRequestDueDate
	}
	return ""
}

func (x *TransactionDetail) GetInvoiceDueDate() string {
	if x != nil {
		return x.InvoiceDueDate
	}
	return ""
}

func (x *TransactionDetail) GetCutOffDate() string {
	if x != nil {
		return x.CutOffDate
	}
	return ""
}

func (x *TransactionDetail) GetPaymentTerm() string {
	if x != nil {
		return x.PaymentTerm
	}
	return ""
}

func (x *TransactionDetail) GetSendInvoiceRequestTo() string {
	if x != nil {
		return x.SendInvoiceRequestTo
	}
	return ""
}

func (x *TransactionDetail) GetSendInvoiceTo() string {
	if x != nil {
		return x.SendInvoiceTo
	}
	return ""
}

func (x *TransactionDetail) GetCc() string {
	if x != nil {
		return x.Cc
	}
	return ""
}

func (x *TransactionDetail) GetBcc() string {
	if x != nil {
		return x.Bcc
	}
	return ""
}

func (x *TransactionDetail) GetBillToEmail() string {
	if x != nil {
		return x.BillToEmail
	}
	return ""
}

func (x *TransactionDetail) GetRequestRejectedAt() string {
	if x != nil {
		return x.RequestRejectedAt
	}
	return ""
}

func (x *TransactionDetail) GetRequestRejectReason() string {
	if x != nil {
		return x.RequestRejectReason
	}
	return ""
}

func (x *TransactionDetail) GetPaidAt() string {
	if x != nil {
		return x.PaidAt
	}
	return ""
}

func (x *TransactionDetail) GetPaymentProof() string {
	if x != nil {
		return x.PaymentProof
	}
	return ""
}

func (x *TransactionDetail) GetPaymentDueDate() string {
	if x != nil {
		return x.PaymentDueDate
	}
	return ""
}

func (x *TransactionDetail) GetPaymentRejectedAt() string {
	if x != nil {
		return x.PaymentRejectedAt
	}
	return ""
}

func (x *TransactionDetail) GetPaymentRejectReason() string {
	if x != nil {
		return x.PaymentRejectReason
	}
	return ""
}

func (x *TransactionDetail) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *TransactionDetail) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *TransactionDetail) GetRequesterName() string {
	if x != nil {
		return x.RequesterName
	}
	return ""
}

func (x *TransactionDetail) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *TransactionDetail) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *TransactionDetail) GetPhoneNumberPic() string {
	if x != nil {
		return x.PhoneNumberPic
	}
	return ""
}

func (x *TransactionDetail) GetIntegrationType() string {
	if x != nil {
		return x.IntegrationType
	}
	return ""
}

func (x *TransactionDetail) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *TransactionDetail) GetLetterAddress() string {
	if x != nil {
		return x.LetterAddress
	}
	return ""
}

func (x *TransactionDetail) GetInvoiceShipment() string {
	if x != nil {
		return x.InvoiceShipment
	}
	return ""
}

func (x *TransactionDetail) GetInvoiceDocument() string {
	if x != nil {
		return x.InvoiceDocument
	}
	return ""
}

func (x *TransactionDetail) GetSupportingDocuments() []*SupportingDocumentResponse {
	if x != nil {
		return x.SupportingDocuments
	}
	return nil
}

func (x *TransactionDetail) GetItemDetails() []*Item {
	if x != nil {
		return x.ItemDetails
	}
	return nil
}

func (x *TransactionDetail) GetTotalPayment() int64 {
	if x != nil {
		return x.TotalPayment
	}
	return 0
}

func (x *TransactionDetail) GetPpnReport() string {
	if x != nil {
		return x.PpnReport
	}
	return ""
}

func (x *TransactionDetail) GetPpn() int64 {
	if x != nil {
		return x.Ppn
	}
	return 0
}

func (x *TransactionDetail) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *TransactionDetail) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *TransactionDetail) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *TransactionDetail) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

type SupportingDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentType string `protobuf:"bytes,1,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
	DocumentFile string `protobuf:"bytes,2,opt,name=document_file,json=documentFile,proto3" json:"document_file,omitempty"`
	Instruction  string `protobuf:"bytes,3,opt,name=instruction,proto3" json:"instruction,omitempty"`
}

func (x *SupportingDocumentRequest) Reset() {
	*x = SupportingDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportingDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportingDocumentRequest) ProtoMessage() {}

func (x *SupportingDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportingDocumentRequest.ProtoReflect.Descriptor instead.
func (*SupportingDocumentRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *SupportingDocumentRequest) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *SupportingDocumentRequest) GetDocumentFile() string {
	if x != nil {
		return x.DocumentFile
	}
	return ""
}

func (x *SupportingDocumentRequest) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

type SupportingDocumentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportingDocumentId string `protobuf:"bytes,1,opt,name=supporting_document_id,json=supportingDocumentId,proto3" json:"supporting_document_id,omitempty"`
	DocumentType         string `protobuf:"bytes,2,opt,name=document_type,json=documentType,proto3" json:"document_type,omitempty"`
	DocumentFile         string `protobuf:"bytes,3,opt,name=document_file,json=documentFile,proto3" json:"document_file,omitempty"`
	Instruction          string `protobuf:"bytes,4,opt,name=instruction,proto3" json:"instruction,omitempty"`
	TransactionId        string `protobuf:"bytes,5,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	FileSize             string `protobuf:"bytes,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileType             string `protobuf:"bytes,7,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	FileName             string `protobuf:"bytes,8,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
}

func (x *SupportingDocumentResponse) Reset() {
	*x = SupportingDocumentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SupportingDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SupportingDocumentResponse) ProtoMessage() {}

func (x *SupportingDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SupportingDocumentResponse.ProtoReflect.Descriptor instead.
func (*SupportingDocumentResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *SupportingDocumentResponse) GetSupportingDocumentId() string {
	if x != nil {
		return x.SupportingDocumentId
	}
	return ""
}

func (x *SupportingDocumentResponse) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *SupportingDocumentResponse) GetDocumentFile() string {
	if x != nil {
		return x.DocumentFile
	}
	return ""
}

func (x *SupportingDocumentResponse) GetInstruction() string {
	if x != nil {
		return x.Instruction
	}
	return ""
}

func (x *SupportingDocumentResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *SupportingDocumentResponse) GetFileSize() string {
	if x != nil {
		return x.FileSize
	}
	return ""
}

func (x *SupportingDocumentResponse) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *SupportingDocumentResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

// ===========================
// Get All Transaction
// ===========================
type GetAllTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source          string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	TransactionType string   `protobuf:"bytes,2,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	PaymentType     string   `protobuf:"bytes,3,opt,name=payment_type,json=paymentType,proto3" json:"payment_type,omitempty"`
	BalanceType     string   `protobuf:"bytes,4,opt,name=balance_type,json=balanceType,proto3" json:"balance_type,omitempty"`
	Status          string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	ChannelCode     string   `protobuf:"bytes,6,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	Q               string   `protobuf:"bytes,7,opt,name=q,proto3" json:"q,omitempty"`
	Meta            *Request `protobuf:"bytes,8,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetAllTransactionRequest) Reset() {
	*x = GetAllTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTransactionRequest) ProtoMessage() {}

func (x *GetAllTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetAllTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *GetAllTransactionRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *GetAllTransactionRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *GetAllTransactionRequest) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *GetAllTransactionRequest) GetBalanceType() string {
	if x != nil {
		return x.BalanceType
	}
	return ""
}

func (x *GetAllTransactionRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetAllTransactionRequest) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *GetAllTransactionRequest) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

func (x *GetAllTransactionRequest) GetMeta() *Request {
	if x != nil {
		return x.Meta
	}
	return nil
}

type GetAllTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data       []*Transaction `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	Pagination *Pagination    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Meta       *BaseResponse  `protobuf:"bytes,3,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetAllTransactionResponse) Reset() {
	*x = GetAllTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTransactionResponse) ProtoMessage() {}

func (x *GetAllTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetAllTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllTransactionResponse) GetData() []*Transaction {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetAllTransactionResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetAllTransactionResponse) GetMeta() *BaseResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

// ===========================
// Get Transaction Detail
// ===========================
type GetTransactionDetailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTransactionDetailRequest) Reset() {
	*x = GetTransactionDetailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionDetailRequest) ProtoMessage() {}

func (x *GetTransactionDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionDetailRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionDetailRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *GetTransactionDetailRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTransactionDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TransactionDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *BaseResponse      `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *GetTransactionDetailResponse) Reset() {
	*x = GetTransactionDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransactionDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionDetailResponse) ProtoMessage() {}

func (x *GetTransactionDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionDetailResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionDetailResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *GetTransactionDetailResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetTransactionDetailResponse) GetMeta() *BaseResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

// ===========================
// Create Transaction
// ===========================
type CreateTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionType       string  `protobuf:"bytes,1,opt,name=transaction_type,json=transactionType,proto3" json:"transaction_type,omitempty"`
	ChannelCode           string  `protobuf:"bytes,2,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	TransferFrom          string  `protobuf:"bytes,3,opt,name=transfer_from,json=transferFrom,proto3" json:"transfer_from,omitempty"`
	TransferTo            string  `protobuf:"bytes,4,opt,name=transfer_to,json=transferTo,proto3" json:"transfer_to,omitempty"`
	ItemDetails           []*Item `protobuf:"bytes,5,rep,name=item_details,json=itemDetails,proto3" json:"item_details,omitempty"`
	InvoiceRequestDueDate string  `protobuf:"bytes,6,opt,name=invoice_request_due_date,json=invoiceRequestDueDate,proto3" json:"invoice_request_due_date,omitempty"`
	PaymentTerm           string  `protobuf:"bytes,7,opt,name=payment_term,json=paymentTerm,proto3" json:"payment_term,omitempty"`
	SendInvoiceTo         string  `protobuf:"bytes,8,opt,name=send_invoice_to,json=sendInvoiceTo,proto3" json:"send_invoice_to,omitempty"`
	Cc                    string  `protobuf:"bytes,9,opt,name=cc,proto3" json:"cc,omitempty"`
	Bcc                   string  `protobuf:"bytes,10,opt,name=bcc,proto3" json:"bcc,omitempty"`
}

func (x *CreateTransactionRequest) Reset() {
	*x = CreateTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionRequest) ProtoMessage() {}

func (x *CreateTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionRequest.ProtoReflect.Descriptor instead.
func (*CreateTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *CreateTransactionRequest) GetTransactionType() string {
	if x != nil {
		return x.TransactionType
	}
	return ""
}

func (x *CreateTransactionRequest) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *CreateTransactionRequest) GetTransferFrom() string {
	if x != nil {
		return x.TransferFrom
	}
	return ""
}

func (x *CreateTransactionRequest) GetTransferTo() string {
	if x != nil {
		return x.TransferTo
	}
	return ""
}

func (x *CreateTransactionRequest) GetItemDetails() []*Item {
	if x != nil {
		return x.ItemDetails
	}
	return nil
}

func (x *CreateTransactionRequest) GetInvoiceRequestDueDate() string {
	if x != nil {
		return x.InvoiceRequestDueDate
	}
	return ""
}

func (x *CreateTransactionRequest) GetPaymentTerm() string {
	if x != nil {
		return x.PaymentTerm
	}
	return ""
}

func (x *CreateTransactionRequest) GetSendInvoiceTo() string {
	if x != nil {
		return x.SendInvoiceTo
	}
	return ""
}

func (x *CreateTransactionRequest) GetCc() string {
	if x != nil {
		return x.Cc
	}
	return ""
}

func (x *CreateTransactionRequest) GetBcc() string {
	if x != nil {
		return x.Bcc
	}
	return ""
}

type CreateTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TransactionDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *BaseResponse      `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *CreateTransactionResponse) Reset() {
	*x = CreateTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTransactionResponse) ProtoMessage() {}

func (x *CreateTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTransactionResponse.ProtoReflect.Descriptor instead.
func (*CreateTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *CreateTransactionResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateTransactionResponse) GetMeta() *BaseResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

// ===========================
// Create Request Invoice
// ===========================
type CreateRequestInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RequesterName        string                       `protobuf:"bytes,2,opt,name=requester_name,json=requesterName,proto3" json:"requester_name,omitempty"`
	RequestedAt          string                       `protobuf:"bytes,3,opt,name=requested_at,json=requestedAt,proto3" json:"requested_at,omitempty"`
	ChannelCode          string                       `protobuf:"bytes,4,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	CompanyName          string                       `protobuf:"bytes,5,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	ProjectName          string                       `protobuf:"bytes,6,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	Pic                  string                       `protobuf:"bytes,7,opt,name=pic,proto3" json:"pic,omitempty"`
	BillToEmail          string                       `protobuf:"bytes,8,opt,name=bill_to_email,json=billToEmail,proto3" json:"bill_to_email,omitempty"`
	PhoneNumberPic       string                       `protobuf:"bytes,9,opt,name=phone_number_pic,json=phoneNumberPic,proto3" json:"phone_number_pic,omitempty"`
	InvoiceShipment      string                       `protobuf:"bytes,10,opt,name=invoice_shipment,json=invoiceShipment,proto3" json:"invoice_shipment,omitempty"`
	IntegrationType      string                       `protobuf:"bytes,11,opt,name=integration_type,json=integrationType,proto3" json:"integration_type,omitempty"`
	LetterAddress        string                       `protobuf:"bytes,12,opt,name=letter_address,json=letterAddress,proto3" json:"letter_address,omitempty"`
	ItemDetails          []*Item                      `protobuf:"bytes,13,rep,name=item_details,json=itemDetails,proto3" json:"item_details,omitempty"`
	CutOffDate           string                       `protobuf:"bytes,14,opt,name=cut_off_date,json=cutOffDate,proto3" json:"cut_off_date,omitempty"`
	WorkType             string                       `protobuf:"bytes,15,opt,name=work_type,json=workType,proto3" json:"work_type,omitempty"`
	Tax                  int64                        `protobuf:"varint,16,opt,name=tax,proto3" json:"tax,omitempty"`
	PpnReport            string                       `protobuf:"bytes,17,opt,name=ppn_report,json=ppnReport,proto3" json:"ppn_report,omitempty"`
	PaymentDueDate       string                       `protobuf:"bytes,18,opt,name=payment_due_date,json=paymentDueDate,proto3" json:"payment_due_date,omitempty"`
	SupportingDocuments  []*SupportingDocumentRequest `protobuf:"bytes,19,rep,name=supporting_documents,json=supportingDocuments,proto3" json:"supporting_documents,omitempty"`
	SendInvoiceRequestTo string                       `protobuf:"bytes,20,opt,name=send_invoice_request_to,json=sendInvoiceRequestTo,proto3" json:"send_invoice_request_to,omitempty"`
	Cc                   string                       `protobuf:"bytes,21,opt,name=cc,proto3" json:"cc,omitempty"`
	Bcc                  string                       `protobuf:"bytes,22,opt,name=bcc,proto3" json:"bcc,omitempty"`
}

func (x *CreateRequestInvoiceRequest) Reset() {
	*x = CreateRequestInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequestInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequestInvoiceRequest) ProtoMessage() {}

func (x *CreateRequestInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequestInvoiceRequest.ProtoReflect.Descriptor instead.
func (*CreateRequestInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *CreateRequestInvoiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetRequesterName() string {
	if x != nil {
		return x.RequesterName
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetRequestedAt() string {
	if x != nil {
		return x.RequestedAt
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetProjectName() string {
	if x != nil {
		return x.ProjectName
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetPic() string {
	if x != nil {
		return x.Pic
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetBillToEmail() string {
	if x != nil {
		return x.BillToEmail
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetPhoneNumberPic() string {
	if x != nil {
		return x.PhoneNumberPic
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetInvoiceShipment() string {
	if x != nil {
		return x.InvoiceShipment
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetIntegrationType() string {
	if x != nil {
		return x.IntegrationType
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetLetterAddress() string {
	if x != nil {
		return x.LetterAddress
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetItemDetails() []*Item {
	if x != nil {
		return x.ItemDetails
	}
	return nil
}

func (x *CreateRequestInvoiceRequest) GetCutOffDate() string {
	if x != nil {
		return x.CutOffDate
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetWorkType() string {
	if x != nil {
		return x.WorkType
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetTax() int64 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *CreateRequestInvoiceRequest) GetPpnReport() string {
	if x != nil {
		return x.PpnReport
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetPaymentDueDate() string {
	if x != nil {
		return x.PaymentDueDate
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetSupportingDocuments() []*SupportingDocumentRequest {
	if x != nil {
		return x.SupportingDocuments
	}
	return nil
}

func (x *CreateRequestInvoiceRequest) GetSendInvoiceRequestTo() string {
	if x != nil {
		return x.SendInvoiceRequestTo
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetCc() string {
	if x != nil {
		return x.Cc
	}
	return ""
}

func (x *CreateRequestInvoiceRequest) GetBcc() string {
	if x != nil {
		return x.Bcc
	}
	return ""
}

type CreateRequestInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TransactionDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *BaseResponse      `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *CreateRequestInvoiceResponse) Reset() {
	*x = CreateRequestInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequestInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequestInvoiceResponse) ProtoMessage() {}

func (x *CreateRequestInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequestInvoiceResponse.ProtoReflect.Descriptor instead.
func (*CreateRequestInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *CreateRequestInvoiceResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateRequestInvoiceResponse) GetMeta() *BaseResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

// ===========================
// Create Invoice
// ===========================
type CreateInvoiceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ChannelCode          string                       `protobuf:"bytes,2,opt,name=channel_code,json=channelCode,proto3" json:"channel_code,omitempty"`
	PaymentDueDate       string                       `protobuf:"bytes,3,opt,name=payment_due_date,json=paymentDueDate,proto3" json:"payment_due_date,omitempty"`
	PaymentTerm          string                       `protobuf:"bytes,4,opt,name=payment_term,json=paymentTerm,proto3" json:"payment_term,omitempty"`
	ItemDetails          []*Item                      `protobuf:"bytes,5,rep,name=item_details,json=itemDetails,proto3" json:"item_details,omitempty"`
	Tax                  int64                        `protobuf:"varint,6,opt,name=tax,proto3" json:"tax,omitempty"`
	SupportingDocuments  []*SupportingDocumentRequest `protobuf:"bytes,7,rep,name=supporting_documents,json=supportingDocuments,proto3" json:"supporting_documents,omitempty"`
	SendInvoiceRequestTo string                       `protobuf:"bytes,8,opt,name=send_invoice_request_to,json=sendInvoiceRequestTo,proto3" json:"send_invoice_request_to,omitempty"`
	Cc                   string                       `protobuf:"bytes,9,opt,name=cc,proto3" json:"cc,omitempty"`
	Bcc                  string                       `protobuf:"bytes,10,opt,name=bcc,proto3" json:"bcc,omitempty"`
}

func (x *CreateInvoiceRequest) Reset() {
	*x = CreateInvoiceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvoiceRequest) ProtoMessage() {}

func (x *CreateInvoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvoiceRequest.ProtoReflect.Descriptor instead.
func (*CreateInvoiceRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *CreateInvoiceRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateInvoiceRequest) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *CreateInvoiceRequest) GetPaymentDueDate() string {
	if x != nil {
		return x.PaymentDueDate
	}
	return ""
}

func (x *CreateInvoiceRequest) GetPaymentTerm() string {
	if x != nil {
		return x.PaymentTerm
	}
	return ""
}

func (x *CreateInvoiceRequest) GetItemDetails() []*Item {
	if x != nil {
		return x.ItemDetails
	}
	return nil
}

func (x *CreateInvoiceRequest) GetTax() int64 {
	if x != nil {
		return x.Tax
	}
	return 0
}

func (x *CreateInvoiceRequest) GetSupportingDocuments() []*SupportingDocumentRequest {
	if x != nil {
		return x.SupportingDocuments
	}
	return nil
}

func (x *CreateInvoiceRequest) GetSendInvoiceRequestTo() string {
	if x != nil {
		return x.SendInvoiceRequestTo
	}
	return ""
}

func (x *CreateInvoiceRequest) GetCc() string {
	if x != nil {
		return x.Cc
	}
	return ""
}

func (x *CreateInvoiceRequest) GetBcc() string {
	if x != nil {
		return x.Bcc
	}
	return ""
}

type CreateInvoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TransactionDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *BaseResponse      `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *CreateInvoiceResponse) Reset() {
	*x = CreateInvoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInvoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInvoiceResponse) ProtoMessage() {}

func (x *CreateInvoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInvoiceResponse.ProtoReflect.Descriptor instead.
func (*CreateInvoiceResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{14}
}

func (x *CreateInvoiceResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CreateInvoiceResponse) GetMeta() *BaseResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

// ===========================
// Approve Transaction
// ===========================
type ApproveTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InvoiceRequestDueDate string `protobuf:"bytes,2,opt,name=invoice_request_due_date,json=invoiceRequestDueDate,proto3" json:"invoice_request_due_date,omitempty"`
}

func (x *ApproveTransactionRequest) Reset() {
	*x = ApproveTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTransactionRequest) ProtoMessage() {}

func (x *ApproveTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTransactionRequest.ProtoReflect.Descriptor instead.
func (*ApproveTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{15}
}

func (x *ApproveTransactionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ApproveTransactionRequest) GetInvoiceRequestDueDate() string {
	if x != nil {
		return x.InvoiceRequestDueDate
	}
	return ""
}

type ApproveTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TransactionDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *BaseResponse      `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *ApproveTransactionResponse) Reset() {
	*x = ApproveTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveTransactionResponse) ProtoMessage() {}

func (x *ApproveTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveTransactionResponse.ProtoReflect.Descriptor instead.
func (*ApproveTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{16}
}

func (x *ApproveTransactionResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApproveTransactionResponse) GetMeta() *BaseResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

// ===========================
// Reject Transaction
// ===========================
type RejectTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RequestRejectReason string `protobuf:"bytes,2,opt,name=request_reject_reason,json=requestRejectReason,proto3" json:"request_reject_reason,omitempty"`
}

func (x *RejectTransactionRequest) Reset() {
	*x = RejectTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTransactionRequest) ProtoMessage() {}

func (x *RejectTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTransactionRequest.ProtoReflect.Descriptor instead.
func (*RejectTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{17}
}

func (x *RejectTransactionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RejectTransactionRequest) GetRequestRejectReason() string {
	if x != nil {
		return x.RequestRejectReason
	}
	return ""
}

type RejectTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *TransactionDetail `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Meta *BaseResponse      `protobuf:"bytes,2,opt,name=meta,proto3" json:"meta,omitempty"`
}

func (x *RejectTransactionResponse) Reset() {
	*x = RejectTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RejectTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectTransactionResponse) ProtoMessage() {}

func (x *RejectTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sales_proto_transaction_gateway_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectTransactionResponse.ProtoReflect.Descriptor instead.
func (*RejectTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_sales_proto_transaction_gateway_proto_rawDescGZIP(), []int{18}
}

func (x *RejectTransactionResponse) GetData() *TransactionDetail {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RejectTransactionResponse) GetMeta() *BaseResponse {
	if x != nil {
		return x.Meta
	}
	return nil
}

var File_api_sales_proto_transaction_gateway_proto protoreflect.FileDescriptor

var file_api_sales_proto_transaction_gateway_proto_rawDesc = []byte{
	0x0a, 0x29, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x1a, 0x1a, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8c, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xbe, 0x04, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x75, 0x74,
	0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x30, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xe2, 0x0e, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x75, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x63,
	0x75, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d,
	0x12, 0x35, 0x0a, 0x17, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x63, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x63, 0x63, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x63,
	0x63, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x54, 0x6f,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x69,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x69, 0x64,
	0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x6f, 0x66, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6f, 0x66, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63, 0x18, 0x23,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x24, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x69, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6c,
	0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x27, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x14, 0x73, 0x75, 0x70, 0x70,
	0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x2a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x73, 0x75, 0x70,
	0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x30, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x2b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x70, 0x6e, 0x5f, 0x72,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x70, 0x6e,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x70, 0x6e, 0x18, 0x2e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x70, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xbc, 0x02, 0x0a, 0x1a, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x92,
	0x02, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x0c, 0x0a, 0x01, 0x71, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x12, 0x24, 0x0a,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x22, 0xa5, 0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x79, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x86, 0x03, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x12, 0x30, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x69, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x65, 0x72, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x63, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x63, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x63, 0x63, 0x22, 0x76,
	0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x6d,
	0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0xb9, 0x06, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x0d, 0x62,
	0x69, 0x6c, 0x6c, 0x5f, 0x74, 0x6f, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x54, 0x6f, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x70, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x69, 0x63, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x69, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x75, 0x74, 0x5f,
	0x6f, 0x66, 0x66, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x75, 0x74, 0x4f, 0x66, 0x66, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f,
	0x72, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77,
	0x6f, 0x72, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x70, 0x6e,
	0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x70, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x55, 0x0a, 0x14, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x52, 0x13, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x74, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x64,
	0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x63,
	0x12, 0x10, 0x0a, 0x03, 0x62, 0x63, 0x63, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62,
	0x63, 0x63, 0x22, 0x79, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x8a, 0x03,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x75, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x65, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12, 0x30, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x69, 0x74, 0x65,
	0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x78, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x61, 0x78, 0x12, 0x55, 0x0a, 0x14, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x13, 0x73, 0x75,
	0x70, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x63, 0x63, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x63, 0x63, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x63, 0x63, 0x22, 0x72, 0x0a, 0x15, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x64,
	0x0a, 0x19, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64,
	0x75, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x75, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x77, 0x0a, 0x1a, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x22, 0x5e, 0x0a,
	0x18, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x76, 0x0a,
	0x19, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x32, 0xb6, 0x05, 0x0a, 0x19, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x65, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x24, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x24,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1d,
	0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5f, 0x0a, 0x12, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x11, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2e,
	0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x2e, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x03,
	0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_sales_proto_transaction_gateway_proto_rawDescOnce sync.Once
	file_api_sales_proto_transaction_gateway_proto_rawDescData = file_api_sales_proto_transaction_gateway_proto_rawDesc
)

func file_api_sales_proto_transaction_gateway_proto_rawDescGZIP() []byte {
	file_api_sales_proto_transaction_gateway_proto_rawDescOnce.Do(func() {
		file_api_sales_proto_transaction_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_sales_proto_transaction_gateway_proto_rawDescData)
	})
	return file_api_sales_proto_transaction_gateway_proto_rawDescData
}

var file_api_sales_proto_transaction_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_sales_proto_transaction_gateway_proto_goTypes = []interface{}{
	(*Item)(nil),                         // 0: invoice.Item
	(*Transaction)(nil),                  // 1: invoice.Transaction
	(*TransactionDetail)(nil),            // 2: invoice.TransactionDetail
	(*SupportingDocumentRequest)(nil),    // 3: invoice.SupportingDocumentRequest
	(*SupportingDocumentResponse)(nil),   // 4: invoice.SupportingDocumentResponse
	(*GetAllTransactionRequest)(nil),     // 5: invoice.GetAllTransactionRequest
	(*GetAllTransactionResponse)(nil),    // 6: invoice.GetAllTransactionResponse
	(*GetTransactionDetailRequest)(nil),  // 7: invoice.GetTransactionDetailRequest
	(*GetTransactionDetailResponse)(nil), // 8: invoice.GetTransactionDetailResponse
	(*CreateTransactionRequest)(nil),     // 9: invoice.CreateTransactionRequest
	(*CreateTransactionResponse)(nil),    // 10: invoice.CreateTransactionResponse
	(*CreateRequestInvoiceRequest)(nil),  // 11: invoice.CreateRequestInvoiceRequest
	(*CreateRequestInvoiceResponse)(nil), // 12: invoice.CreateRequestInvoiceResponse
	(*CreateInvoiceRequest)(nil),         // 13: invoice.CreateInvoiceRequest
	(*CreateInvoiceResponse)(nil),        // 14: invoice.CreateInvoiceResponse
	(*ApproveTransactionRequest)(nil),    // 15: invoice.ApproveTransactionRequest
	(*ApproveTransactionResponse)(nil),   // 16: invoice.ApproveTransactionResponse
	(*RejectTransactionRequest)(nil),     // 17: invoice.RejectTransactionRequest
	(*RejectTransactionResponse)(nil),    // 18: invoice.RejectTransactionResponse
	(*Request)(nil),                      // 19: invoice.Request
	(*Pagination)(nil),                   // 20: invoice.Pagination
	(*BaseResponse)(nil),                 // 21: invoice.BaseResponse
}
var file_api_sales_proto_transaction_gateway_proto_depIdxs = []int32{
	0,  // 0: invoice.Transaction.item_details:type_name -> invoice.Item
	4,  // 1: invoice.TransactionDetail.supporting_documents:type_name -> invoice.SupportingDocumentResponse
	0,  // 2: invoice.TransactionDetail.item_details:type_name -> invoice.Item
	19, // 3: invoice.GetAllTransactionRequest.meta:type_name -> invoice.Request
	1,  // 4: invoice.GetAllTransactionResponse.data:type_name -> invoice.Transaction
	20, // 5: invoice.GetAllTransactionResponse.pagination:type_name -> invoice.Pagination
	21, // 6: invoice.GetAllTransactionResponse.meta:type_name -> invoice.BaseResponse
	2,  // 7: invoice.GetTransactionDetailResponse.data:type_name -> invoice.TransactionDetail
	21, // 8: invoice.GetTransactionDetailResponse.meta:type_name -> invoice.BaseResponse
	0,  // 9: invoice.CreateTransactionRequest.item_details:type_name -> invoice.Item
	2,  // 10: invoice.CreateTransactionResponse.data:type_name -> invoice.TransactionDetail
	21, // 11: invoice.CreateTransactionResponse.meta:type_name -> invoice.BaseResponse
	0,  // 12: invoice.CreateRequestInvoiceRequest.item_details:type_name -> invoice.Item
	3,  // 13: invoice.CreateRequestInvoiceRequest.supporting_documents:type_name -> invoice.SupportingDocumentRequest
	2,  // 14: invoice.CreateRequestInvoiceResponse.data:type_name -> invoice.TransactionDetail
	21, // 15: invoice.CreateRequestInvoiceResponse.meta:type_name -> invoice.BaseResponse
	0,  // 16: invoice.CreateInvoiceRequest.item_details:type_name -> invoice.Item
	3,  // 17: invoice.CreateInvoiceRequest.supporting_documents:type_name -> invoice.SupportingDocumentRequest
	2,  // 18: invoice.CreateInvoiceResponse.data:type_name -> invoice.TransactionDetail
	21, // 19: invoice.CreateInvoiceResponse.meta:type_name -> invoice.BaseResponse
	2,  // 20: invoice.ApproveTransactionResponse.data:type_name -> invoice.TransactionDetail
	21, // 21: invoice.ApproveTransactionResponse.meta:type_name -> invoice.BaseResponse
	2,  // 22: invoice.RejectTransactionResponse.data:type_name -> invoice.TransactionDetail
	21, // 23: invoice.RejectTransactionResponse.meta:type_name -> invoice.BaseResponse
	5,  // 24: invoice.TransactionGatewayService.GetAllTransaction:input_type -> invoice.GetAllTransactionRequest
	7,  // 25: invoice.TransactionGatewayService.GetTransactionDetail:input_type -> invoice.GetTransactionDetailRequest
	9,  // 26: invoice.TransactionGatewayService.CreateTransaction:input_type -> invoice.CreateTransactionRequest
	11, // 27: invoice.TransactionGatewayService.CreateRequestInvoice:input_type -> invoice.CreateRequestInvoiceRequest
	13, // 28: invoice.TransactionGatewayService.CreateInvoice:input_type -> invoice.CreateInvoiceRequest
	15, // 29: invoice.TransactionGatewayService.ApproveTransaction:input_type -> invoice.ApproveTransactionRequest
	17, // 30: invoice.TransactionGatewayService.RejectTransaction:input_type -> invoice.RejectTransactionRequest
	6,  // 31: invoice.TransactionGatewayService.GetAllTransaction:output_type -> invoice.GetAllTransactionResponse
	8,  // 32: invoice.TransactionGatewayService.GetTransactionDetail:output_type -> invoice.GetTransactionDetailResponse
	10, // 33: invoice.TransactionGatewayService.CreateTransaction:output_type -> invoice.CreateTransactionResponse
	12, // 34: invoice.TransactionGatewayService.CreateRequestInvoice:output_type -> invoice.CreateRequestInvoiceResponse
	14, // 35: invoice.TransactionGatewayService.CreateInvoice:output_type -> invoice.CreateInvoiceResponse
	16, // 36: invoice.TransactionGatewayService.ApproveTransaction:output_type -> invoice.ApproveTransactionResponse
	18, // 37: invoice.TransactionGatewayService.RejectTransaction:output_type -> invoice.RejectTransactionResponse
	31, // [31:38] is the sub-list for method output_type
	24, // [24:31] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_api_sales_proto_transaction_gateway_proto_init() }
func file_api_sales_proto_transaction_gateway_proto_init() {
	if File_api_sales_proto_transaction_gateway_proto != nil {
		return
	}
	file_api_sales_proto_meta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_sales_proto_transaction_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportingDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SupportingDocumentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionDetailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransactionDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequestInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequestInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvoiceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInvoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sales_proto_transaction_gateway_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RejectTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_sales_proto_transaction_gateway_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_sales_proto_transaction_gateway_proto_goTypes,
		DependencyIndexes: file_api_sales_proto_transaction_gateway_proto_depIdxs,
		MessageInfos:      file_api_sales_proto_transaction_gateway_proto_msgTypes,
	}.Build()
	File_api_sales_proto_transaction_gateway_proto = out.File
	file_api_sales_proto_transaction_gateway_proto_rawDesc = nil
	file_api_sales_proto_transaction_gateway_proto_goTypes = nil
	file_api_sales_proto_transaction_gateway_proto_depIdxs = nil
}
